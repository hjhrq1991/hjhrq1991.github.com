<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>猪生-秋仔</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-13T06:00:04.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>猪生-秋仔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android屏幕适配终极方案-实战篇</title>
    <link href="http://yoursite.com/2017/09/13/ScreenAdapter/"/>
    <id>http://yoursite.com/2017/09/13/ScreenAdapter/</id>
    <published>2017-09-13T05:50:56.000Z</published>
    <updated>2017-09-13T06:00:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a><a href="https://github.com/hjhrq1991/screenAdaptation" target="_blank" rel="external">项目地址</a><br></h2><p>ScreenAdapter项目源于开发时老被设计狮吐槽没有高度还原设计稿，加上Android屏幕分辨率众多，总是需要微调或舍弃非主流分辨率的适配。ScreenAdapter由此而生，经历了多个项目的测试，适配情况基本达到理想情况。</p><p>ScreenAdapter有以下特点：</p><ul><li>简单、方便</li></ul><ul><li>接入简单，极少侵入</li><li>代码、布局换算px全局生效</li></ul><ul><li>布局更优</li></ul><ul><li>dp可以直接替换为pt/in/mm</li><li>可直接使用设计稿标注尺寸</li><li>无须布局嵌套即可实现</li></ul><ul><li>性能更优</li></ul><ul><li>无须依赖AutoLayout之类的第三方库</li></ul><p><a href="#使用">怎样使用ScreenAdapter?</a></p><p>如果你觉得ScreenAdapter对你有帮助，您的star和issues将是对我最大支持.<code>^_^</code></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>当你看到此图时，你会如何在各种分辨率下还原效果？<br><img src="/img/ScreenAdapter/design_spec.jpg" alt="设计图"></p><p><img src="/img/ScreenAdapter/screenadpater_480270.gif" alt="效果"></p><p>适配情况：</p><table><thead><tr><th>描述</th><th>华为荣耀8</th><th>魅族MX3</th><th>魅族MX2</th></tr></thead><tbody><tr><td>分辨率</td><td>1920*1080</td><td>1800*1080</td><td>1280*800</td></tr><tr><td>宽高比</td><td>16:9</td><td>15:9</td><td>16:10</td></tr><tr><td>效果图</td><td><img src="/img/ScreenAdapter/honor8_sample1.jpg" alt="荣耀8"></td><td><img src="/img/ScreenAdapter/mx3_sample1.jpg" alt="mx3"></td><td><img src="/img/ScreenAdapter/mx2_sample1.jpg" alt="mx2"></td></tr></tbody></table><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://bintray.com/hjhrq1991/maven/ScreenAdapter/_latestVersion" target="_blank" rel="external"><img src="https://api.bintray.com/packages/hjhrq1991/maven/ScreenAdapter/images/download.svg" alt="Download"></a><br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'com.hjhrq991.screenadapter:ScreenAdapter:1.0.0'</span></div></pre></td></tr></table></figure><p></p><hr><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="无Application"><a href="#无Application" class="headerlink" title="无Application"></a>无Application</h3><p>可在AndroidManifest使用ScreenAdapterApplication<br></p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;application</div><div class="line">android:name="com.hjhrq991.screenadapter.ScreenAdapterApplication"&gt;</div><div class="line"></div><div class="line">&lt;/application&gt;</div></pre></td></tr></table></figure><p></p><h3 id="有自定义Application"><a href="#有自定义Application" class="headerlink" title="有自定义Application"></a>有自定义Application</h3><p>如你的自定义Application继承Application，修改成继承ScreenAdapterApplication即可<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">ScreenAdapterApplication</span> </span>&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>如你的自定义Application继承其他Application，可通过ScreenAdaperHelper来实现。DESIGN_WIDTH为设计稿的宽度(如果你的设计稿宽度不统一，请找你们的设计狮)，DESIGN_WIDTH的值建议使用px换算dp的结果，即px/2。<br>具体实现如下：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">float</span> DESIGN_WIDTH = <span class="number">375f</span>;</div><div class="line"></div><div class="line"><span class="keyword">private</span> ScreenAdaperHelper mHelper;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">super</span>.onCreate();</div><div class="line"><span class="comment">//init helper with default with.</span></div><div class="line"><span class="comment">//        mHelper = ScreenAdaperHelper.init(this);</span></div><div class="line"><span class="comment">//init helper with the width for design drawing</span></div><div class="line">mHelper = ScreenAdaperHelper.init(<span class="keyword">this</span>, DESIGN_WIDTH);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConfigurationChanged</span><span class="params">(Configuration newConfig)</span> </span>&#123;</div><div class="line"><span class="keyword">super</span>.onConfigurationChanged(newConfig);</div><div class="line">mHelper.onConfigurationChanged();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> Resources <span class="title">getResources</span><span class="params">()</span> </span>&#123;</div><div class="line">Resources res = <span class="keyword">super</span>.getResources();</div><div class="line"><span class="comment">//Will call before init</span></div><div class="line"><span class="keyword">if</span> (mHelper != <span class="keyword">null</span>)</div><div class="line">mHelper.getResources(res);</div><div class="line"><span class="keyword">return</span> res;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h2 id="适配"><a href="#适配" class="headerlink" title="适配"></a>适配</h2><p>由于本方案运行时才生效，因此建议写布局文件时优先使用dp做为单位，写完布局后使用pt/in/mm全局替换dp即可。<br>同时建议多使用FrameLayout，适当使用LinearLayout，尽量少用RelativeLayout，能更大程度减少层级。<br></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"375pt"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"240pt"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/white"</span></div><div class="line"><span class="attr">android:layout_marginBottom</span>=<span class="string">"15pt"</span></div><div class="line"><span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line"><span class="attr">android:id</span>=<span class="string">"@+id/layout_left"</span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"160pt"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"240pt"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"150pt"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"150pt"</span></div><div class="line"><span class="attr">android:layout_gravity</span>=<span class="string">"bottom|center_horizontal"</span></div><div class="line"><span class="attr">android:layout_margin</span>=<span class="string">"5pt"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/gray"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"14pt"</span></div><div class="line"><span class="attr">android:layout_marginLeft</span>=<span class="string">"15pt"</span></div><div class="line"><span class="attr">android:layout_marginRight</span>=<span class="string">"15pt"</span></div><div class="line"><span class="attr">android:layout_marginTop</span>=<span class="string">"10pt"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/gray"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"90pt"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"10pt"</span></div><div class="line"><span class="attr">android:layout_marginLeft</span>=<span class="string">"15pt"</span></div><div class="line"><span class="attr">android:layout_marginTop</span>=<span class="string">"32pt"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/gray"</span></div><div class="line"><span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"60pt"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"26pt"</span></div><div class="line"><span class="attr">android:layout_marginLeft</span>=<span class="string">"15pt"</span></div><div class="line"><span class="attr">android:layout_marginRight</span>=<span class="string">"15pt"</span></div><div class="line"><span class="attr">android:layout_marginTop</span>=<span class="string">"45pt"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/gray"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></div><div class="line"><span class="attr">android:id</span>=<span class="string">"@+id/gridview"</span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"215pt"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"240pt"</span></div><div class="line"><span class="attr">android:layout_gravity</span>=<span class="string">"right"</span></div><div class="line"><span class="attr">android:listSelector</span>=<span class="string">"@color/white"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"0.5pt"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line"><span class="attr">android:layout_marginLeft</span>=<span class="string">"160pt"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/ececec"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"0.5pt"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line"><span class="attr">android:layout_gravity</span>=<span class="string">"right"</span></div><div class="line"><span class="attr">android:layout_marginRight</span>=<span class="string">"107.5pt"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/ececec"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"215pt"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"0.5pt"</span></div><div class="line"><span class="attr">android:layout_gravity</span>=<span class="string">"center_vertical|right"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/ececec"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div></pre></td></tr></table></figure><p></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"120pt"</span></div><div class="line"><span class="attr">android:paddingBottom</span>=<span class="string">"2pt"</span></div><div class="line"><span class="attr">android:paddingLeft</span>=<span class="string">"15pt"</span></div><div class="line"><span class="attr">android:paddingRight</span>=<span class="string">"15pt"</span></div><div class="line"><span class="attr">android:paddingTop</span>=<span class="string">"10pt"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"14pt"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/gray"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"10pt"</span></div><div class="line"><span class="attr">android:layout_marginRight</span>=<span class="string">"15pt"</span></div><div class="line"><span class="attr">android:layout_marginTop</span>=<span class="string">"16pt"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/gray"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">View</span></span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"77pt"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"77pt"</span></div><div class="line"><span class="attr">android:layout_gravity</span>=<span class="string">"bottom|center_horizontal"</span></div><div class="line"><span class="attr">android:background</span>=<span class="string">"@color/gray"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="适配情况"><a href="#适配情况" class="headerlink" title="适配情况"></a>适配情况</h2><p>各款设备均能高度还原设计稿效果，布局使用pt/in/mm代替dp、sp，dp、sp由于使用频率较高继续保留。<br>横竖屏切换时会以当前的屏幕宽度进行换算，如你的布局非列表或者Scrollview，建议横竖屏使用不同的layout进行适配。</p><p>当前未解决问题：华为等有可动态导航栏的设备，横屏情况下，收起/展开导航栏并没有好的方式监听，且不会触发页面刷新，强行刷新UI势必浪费性能。<br>如您对此问题有好的解决方法，请留言反馈给我！谢谢！</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>有任何问题，可以在<a href="https://github.com/hjhrq1991/screenAdaptation/issues" target="_blank" rel="external">issues</a>给我留言反馈。<br><br>或其他方式联系我：<br><br>Gmail：hjhrq1991@gmail.com<br><br>QQ：444563258<br></p><hr><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a href="LICENSE">Apache 2.0</a></p><p>如有转载，请注明出处:<a href="http://blog.csdn.net/hjhrq1991" target="_blank" rel="external">http://blog.csdn.net/hjhrq1991</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;项目地址&quot;&gt;&lt;a href=&quot;#项目地址&quot; class=&quot;headerlink&quot; title=&quot;项目地址&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/hjhrq1991/screenAdaptation&quot; target=&quot;_blank&quot; re
    
    </summary>
    
    
      <category term="Andoird" scheme="http://yoursite.com/tags/Andoird/"/>
    
      <category term="屏幕" scheme="http://yoursite.com/tags/%E5%B1%8F%E5%B9%95/"/>
    
      <category term="适配" scheme="http://yoursite.com/tags/%E9%80%82%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>Android-禁用系统字体缩放</title>
    <link href="http://yoursite.com/2017/07/18/fontScale/"/>
    <id>http://yoursite.com/2017/07/18/fontScale/</id>
    <published>2017-07-18T05:50:43.000Z</published>
    <updated>2017-07-21T06:41:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>设计师辛辛苦苦做出设计稿，开发人员辛辛苦苦把UI调好了，但是在Android用户修改系统的默认字体大小，原先的设计很容易失效，变得非常难看，考虑你的用户人群，又不想因为用户变更默认字体大小导致app的样式走样，我们可以这么做：</p><h3 id="1-字体使用dp-dip代替sp"><a href="#1-字体使用dp-dip代替sp" class="headerlink" title="1.字体使用dp/dip代替sp"></a>1.字体使用dp/dip代替sp</h3><p>dp/dip(device independent pixels):一种基于屏幕密度的抽象单位。在每英寸160点的显示器上，1dp=1px。不同设备有不同的显示效果，这个和设备硬件有关。<br>sp(Scaled Pixels):主要用于字体显示，与刻度无关的一种像素，与dp类似，但是可以根据用户的字体大小首选项进行缩放。</p><p>查看TextView的源码可以发现：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">* Set the default text size to the given value, interpreted as &quot;scaled</div><div class="line">* pixel&quot; units.  This size is adjusted based on the current density and</div><div class="line">* user font size preference.</div><div class="line">*</div><div class="line">* @param size The scaled pixel size.</div><div class="line">*</div><div class="line">* @attr ref android.R.styleable#TextView_textSize</div><div class="line">*/</div><div class="line">@android.view.RemotableViewMethod</div><div class="line">public void setTextSize(float size) &#123;</div><div class="line">    setTextSize(TypedValue.COMPLEX_UNIT_SP, size);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line">* Set the default text size to a given unit and value.  See &#123;@link</div><div class="line">* TypedValue&#125; for the possible dimension units.</div><div class="line">*</div><div class="line">* @param unit The desired dimension unit.</div><div class="line">* @param size The desired size in the given units.</div><div class="line">*</div><div class="line">* @attr ref android.R.styleable#TextView_textSize</div><div class="line">*/</div><div class="line">public void setTextSize(int unit, float size) &#123;</div><div class="line">    Context c = getContext();</div><div class="line">    Resources r;</div><div class="line"></div><div class="line">    if (c == null)</div><div class="line">        r = Resources.getSystem();</div><div class="line">    else</div><div class="line">        r = c.getResources();</div><div class="line"></div><div class="line">    setRawTextSize(TypedValue.applyDimension(</div><div class="line">    unit, size, r.getDisplayMetrics()));</div><div class="line">&#125;</div><div class="line"></div><div class="line">private void setRawTextSize(float size) &#123;</div><div class="line">    if (size != mTextPaint.getTextSize()) &#123;</div><div class="line">        mTextPaint.setTextSize(size);</div><div class="line"></div><div class="line">        if (mLayout != null) &#123;</div><div class="line">            nullLayouts();</div><div class="line">            requestLayout();</div><div class="line">            invalidate();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>TypedValue.applyDimension()源码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">public static float applyDimension(int unit, float value,</div><div class="line">    DisplayMetrics metrics)</div><div class="line">&#123;</div><div class="line">    switch (unit) &#123;</div><div class="line">        case COMPLEX_UNIT_PX:</div><div class="line">            return value;</div><div class="line">        case COMPLEX_UNIT_DIP:</div><div class="line">            return value * metrics.density;</div><div class="line">        case COMPLEX_UNIT_SP:</div><div class="line">            return value * metrics.scaledDensity;</div><div class="line">        case COMPLEX_UNIT_PT:</div><div class="line">            return value * metrics.xdpi * (1.0f/72);</div><div class="line">        case COMPLEX_UNIT_IN:</div><div class="line">            return value * metrics.xdpi;</div><div class="line">        case COMPLEX_UNIT_MM:</div><div class="line">            return value * metrics.xdpi * (1.0f/25.4f);</div><div class="line">        &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>dp与sp的换算差别只在于metrics.density和metrics.scaledDensity，<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">* A scaling factor for fonts displayed on the display.  This is the same</div><div class="line">* as &#123;@link #density&#125;, except that it may be adjusted in smaller</div><div class="line">* increments at runtime based on a user preference for the font size.</div><div class="line">*/</div><div class="line">public float scaledDensity;</div></pre></td></tr></table></figure><p></p><p>因此，sp和dp的区别是乘以一个scale。</p><h3 id="2-通过重写系统方法禁用"><a href="#2-通过重写系统方法禁用" class="headerlink" title="2.通过重写系统方法禁用"></a>2.通过重写系统方法禁用</h3><p>在Application重写以下方法即可<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void onConfigurationChanged(Configuration newConfig) &#123;</div><div class="line">    if (newConfig.fontScale != 1)//非默认值</div><div class="line">        getResources();</div><div class="line">    super.onConfigurationChanged(newConfig);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Override</div><div class="line">public Resources getResources() &#123;</div><div class="line">    Resources res = super.getResources();</div><div class="line">    if (res.getConfiguration().fontScale != 1) &#123;//非默认值</div><div class="line">        Configuration newConfig = new Configuration();</div><div class="line">        newConfig.setToDefaults();//设置默认</div><div class="line">        res.updateConfiguration(newConfig, res.getDisplayMetrics());</div><div class="line">    &#125;</div><div class="line">    return res;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>通过重写方法，把fontScale重置为默认值。此方式无侵入，仅对当前App有效。</p><p>个人博客：<a href="http://hjhrq1991.info" target="_blank" rel="external">http://hjhrq1991.info</a></p><h4 id="如有转发，请注明来源！"><a href="#如有转发，请注明来源！" class="headerlink" title="如有转发，请注明来源！"></a>如有转发，请注明来源！</h4><hr><p>参考：<br>[1]：<a href="http://blog.csdn.net/vipycm/article/details/44264199/" target="_blank" rel="external">http://blog.csdn.net/vipycm/article/details/44264199/</a><br>[2]：<a href="http://blog.csdn.net/sunshinetan/article/details/53954468/" target="_blank" rel="external">http://blog.csdn.net/sunshinetan/article/details/53954468/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;设计师辛辛苦苦做出设计稿，开发人员辛辛苦苦把UI调好了，但是在Android用户修改系统的默认字体大小，原先的设计很容易失效，变得非常难看，考虑你的用户人群，又不想因为用户变更默认字体大小导致app的样式走样，我们可以这么做：&lt;/p&gt;&lt;h3 id=&quot;1-字体使用dp-dip
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="字体大小" scheme="http://yoursite.com/tags/%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F/"/>
    
  </entry>
  
  <entry>
    <title>ADB命令全集</title>
    <link href="http://yoursite.com/2016/09/14/ADBUsage/"/>
    <id>http://yoursite.com/2016/09/14/ADBUsage/</id>
    <published>2016-09-14T06:15:36.000Z</published>
    <updated>2016-09-14T06:24:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>ADB，即 <a href="https://developer.android.com/studio/command-line/adb.html" target="_blank" rel="external">Android Debug Bridge</a>，它是 Android 开发/测试人员不可替代的强大工具，也是 Android 设备玩家的好玩具。<br>如何在mac的Terminal工具使用ADB命令请看<a href="http://hjhrq1991.info/2014/12/25/ADB" target="_blank" rel="external">Android-mac下如何使用adb命令</a></p><p><strong>注：</strong>有部分命令的支持情况可能与 Android 系统版本及定制 ROM 的实现有关。</p><ul><li><a href="#基本用法">基本用法</a><ul><li><a href="#命令语法">命令语法</a></li><li><a href="#为命令指定目标设备">为命令指定目标设备</a></li><li><a href="#启动停止">启动/停止</a></li><li><a href="#查看-adb-版本">查看 adb 版本</a></li><li><a href="#以-root-权限运行-adbd">以 root 权限运行 adbd</a></li><li><a href="#指定-adb-server-的网络端口">指定 adb server 的网络端口</a></li></ul></li><li><a href="#设备连接管理">设备连接管理</a><ul><li><a href="#查询已连接设备模拟器">查询已连接设备/模拟器</a></li><li><a href="#usb-连接">USB 连接</a></li><li><a href="#无线连接需要借助-usb-线">无线连接（需要借助 USB 线）</a></li><li><a href="#无线连接无需借助-usb-线">无线连接（无需借助 USB 线）</a></li></ul></li><li><a href="#应用管理">应用管理</a><ul><li><a href="#查看应用列表">查看应用列表</a><ul><li><a href="#所有应用">所有应用</a></li><li><a href="#系统应用">系统应用</a></li><li><a href="#第三方应用">第三方应用</a></li><li><a href="#包名包含某字符串的应用">包名包含某字符串的应用</a></li></ul></li><li><a href="#安装-apk">安装 APK</a></li><li><a href="#卸载应用">卸载应用</a></li><li><a href="#清除应用数据与缓存">清除应用数据与缓存</a></li><li><a href="#查看前台-activity">查看前台 Activity</a></li></ul></li><li><a href="#与应用交互">与应用交互</a><ul><li><a href="#调起-activity">调起 Activity</a></li><li><a href="#调起-service">调起 Service</a></li><li><a href="#发送广播">发送广播</a></li><li><a href="#强制停止应用">强制停止应用</a></li></ul></li><li><a href="#文件管理">文件管理</a><ul><li><a href="#复制设备里的文件到电脑">复制设备里的文件到电脑</a></li><li><a href="#复制电脑里的文件到设备">复制电脑里的文件到设备</a></li></ul></li><li><a href="#模拟按键输入">模拟按键/输入</a><ul><li><a href="#电源键">电源键</a></li><li><a href="#菜单键">菜单键</a></li><li><a href="#home-键">HOME 键</a></li><li><a href="#返回键">返回键</a></li><li><a href="#音量控制">音量控制</a></li><li><a href="#媒体控制">媒体控制</a></li><li><a href="#点亮熄灭屏幕">点亮/熄灭屏幕</a></li><li><a href="#滑动解锁">滑动解锁</a></li><li><a href="#输入文本">输入文本</a></li></ul></li><li><a href="#查看日志">查看日志</a><ul><li><a href="#android-日志">Android 日志</a><ul><li><a href="#按级别过滤日志">按级别过滤日志</a></li><li><a href="#按-tag-和级别过滤日志">按 tag 和级别过滤日志</a></li><li><a href="#日志格式">日志格式</a></li><li><a href="#清空日志">清空日志</a></li></ul></li><li><a href="#内核日志">内核日志</a></li></ul></li><li><a href="#查看设备信息">查看设备信息</a><ul><li><a href="#型号">型号</a></li><li><a href="#电池状况">电池状况</a></li><li><a href="#屏幕分辨率">屏幕分辨率</a></li><li><a href="#屏幕密度">屏幕密度</a></li><li><a href="#显示屏参数">显示屏参数</a></li><li><a href="#android_id">android_id</a></li><li><a href="#imei">IMEI</a></li><li><a href="#android-系统版本">Android 系统版本</a></li><li><a href="#mac-地址">Mac 地址</a></li><li><a href="#cpu-信息">CPU 信息</a></li><li><a href="#内存信息">内存信息</a></li><li><a href="#更多硬件与系统属性">更多硬件与系统属性</a></li></ul></li><li><a href="#实用功能">实用功能</a><ul><li><a href="#屏幕截图">屏幕截图</a></li><li><a href="#录制屏幕">录制屏幕</a></li><li><a href="#重新挂载-system-分区为可写">重新挂载 system 分区为可写</a></li><li><a href="#查看连接过的-wifi-密码">查看连接过的 WiFi 密码</a></li><li><a href="#设置系统日期和时间">设置系统日期和时间</a></li><li><a href="#重启手机">重启手机</a></li><li><a href="#检测设备是否已-root">检测设备是否已 root</a></li><li><a href="#使用-monkey-进行压力测试">使用 Monkey 进行压力测试</a></li><li><a href="#开启关闭-wifi">开启/关闭 WiFi</a></li></ul></li><li><a href="#刷机相关命令">刷机相关命令</a><ul><li><a href="#重启到-recovery-模式">重启到 Recovery 模式</a></li><li><a href="#从-recovery-重启到-android">从 Recovery 重启到 Android</a></li><li><a href="#重启到-fastboot-模式">重启到 Fastboot 模式</a></li><li><a href="#通过-sideload-更新系统">通过 sideload 更新系统</a></li></ul></li><li><a href="#更多-adb-shell-命令">更多 adb shell 命令</a><ul><li><a href="#查看进程">查看进程</a></li><li><a href="#查看实时资源占用情况">查看实时资源占用情况</a></li><li><a href="#其它">其它</a></li></ul></li><li><a href="#常见问题">常见问题</a><ul><li><a href="#启动-adb-server-失败">启动 adb server 失败</a></li></ul></li><li><a href="#adb-的非官方实现">adb 的非官方实现</a></li><li><a href="#致谢">致谢</a></li><li><a href="#参考链接">参考链接</a></li></ul><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="命令语法"><a href="#命令语法" class="headerlink" title="命令语法"></a>命令语法</h3><p>adb 命令的基本语法如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb [<span class="_">-d</span>|<span class="_">-e</span>|<span class="_">-s</span> &lt;serialNumber&gt;] &lt;<span class="built_in">command</span>&gt;</div></pre></td></tr></table></figure><p>如果只有一个设备/模拟器连接时，可以省略掉 <code>[-d|-e|-s &lt;serialNumber&gt;]</code> 这一部分，直接使用 <code>adb &lt;command&gt;</code>。</p><h3 id="为命令指定目标设备"><a href="#为命令指定目标设备" class="headerlink" title="为命令指定目标设备"></a>为命令指定目标设备</h3><p>如果有多个设备/模拟器连接，则需要为命令指定目标设备。</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-d</td><td>指定当前唯一通过 USB 连接的 Android 设备为命令目标</td></tr><tr><td>-e</td><td>指定当前唯一运行的模拟器为命令目标</td></tr><tr><td><code>-s &lt;serialNumber&gt;</code></td><td>指定相应 serialNumber 号的设备/模拟器为命令目标</td></tr></tbody></table><p>在多个设备/模拟器连接的情况下较常用的是 <code>-s &lt;serialNumber&gt;</code> 参数，serialNumber 可以通过 <code>adb devices</code> 命令获取。如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ adb devices</div><div class="line"></div><div class="line">List of devices attached</div><div class="line">cf264b8f	device</div><div class="line">emulator-5554	device</div></pre></td></tr></table></figure><p>输出里的 <code>cf264b8f</code> 和 <code>emulator-5554</code> 即为 serialNumber。比如这时想指定 <code>cf264b8f</code> 这个设备来运行 adb 命令获取屏幕分辨率：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb <span class="_">-s</span> cf264b8f shell wm size</div></pre></td></tr></table></figure><p>遇到多设备/模拟器的情况均使用这几个参数为命令指定目标设备，下文中为简化描述，不再重复。</p><h3 id="启动-停止"><a href="#启动-停止" class="headerlink" title="启动/停止"></a>启动/停止</h3><p>启动 adb server 命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb start-server</div></pre></td></tr></table></figure><p>（一般无需手动执行此命令，在运行 adb 命令时若发现 adb server 没有启动会自动调起。）</p><p>停止 adb server 命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb <span class="built_in">kill</span>-server</div></pre></td></tr></table></figure><h3 id="查看-adb-版本"><a href="#查看-adb-版本" class="headerlink" title="查看 adb 版本"></a>查看 adb 版本</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb version</div></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Android Debug Bridge version 1.0.36</div><div class="line">Revision 8f855a3d9b35-android</div></pre></td></tr></table></figure><h3 id="以-root-权限运行-adbd"><a href="#以-root-权限运行-adbd" class="headerlink" title="以 root 权限运行 adbd"></a>以 root 权限运行 adbd</h3><p>adb 的运行原理是 PC 端的 adb server 与手机端的守护进程 adbd 建立连接，然后 PC 端的 adb client 通过 adb server 转发命令，adbd 接收命令后解析运行。</p><p>所以如果 adbd 以普通权限执行，有些需要 root 权限才能执行的命令无法直接用 <code>adb xxx</code> 执行。这时可以 <code>adb shell</code> 然后 <code>su</code> 后执行命令，也可以让 adbd 以 root 权限执行，这个就能随意执行高权限命令了。</p><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb root</div></pre></td></tr></table></figure><p>正常输出：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">restarting adbd as root</div></pre></td></tr></table></figure><p>现在再运行 <code>adb shell</code>，看看命令行提示符是不是变成 <code>#</code> 了？</p><p>有些手机 root 后也无法通过 <code>adb root</code> 命令让 adbd 以 root 权限执行，比如三星的部分机型，会提示 <code>adbd cannot run as root in production builds</code>，此时可以先安装 adbd Insecure，然后 <code>adb root</code> 试试。</p><p>相应地，如果要恢复 adbd 为非 root 权限的话，可以使用 <code>adb unroot</code> 命令。</p><h3 id="指定-adb-server-的网络端口"><a href="#指定-adb-server-的网络端口" class="headerlink" title="指定 adb server 的网络端口"></a>指定 adb server 的网络端口</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb -P &lt;port&gt; start-server</div></pre></td></tr></table></figure><p>默认端口为 5037。</p><h2 id="设备连接管理"><a href="#设备连接管理" class="headerlink" title="设备连接管理"></a>设备连接管理</h2><h3 id="查询已连接设备-模拟器"><a href="#查询已连接设备-模拟器" class="headerlink" title="查询已连接设备/模拟器"></a>查询已连接设备/模拟器</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb devices</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">List of devices attached</div><div class="line">cf264b8f	device</div><div class="line">emulator-5554	device</div></pre></td></tr></table></figure><p>输出格式为 <code>[serialNumber] [state]</code>，serialNumber 即我们常说的 SN，state 有如下几种：</p><ul><li><p><code>offline</code> —— 表示设备未连接成功或无响应。</p></li><li><p><code>device</code> —— 设备已连接。注意这个状态并不能标识 Android 系统已经完全启动和可操作，在设备启动过程中设备实例就可连接到 adb，但启动完毕后系统才处于可操作状态。</p></li><li><p><code>no device</code> —— 没有设备/模拟器连接。</p></li></ul><p>以上输出显示当前已经连接了两台设备/模拟器，<code>cf264b8f</code> 与 <code>emulator-5554</code> 分别是它们的 SN。从 <code>emulator-5554</code> 这个名字可以看出它是一个 Android 模拟器。</p><p>常见异常输出：</p><ol><li><p>没有设备/模拟器连接成功。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">List of devices attached</div></pre></td></tr></table></figure></li><li><p>设备/模拟器未连接到 adb 或无响应。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">List of devices attached</div><div class="line">cf264b8f	offline</div></pre></td></tr></table></figure></li></ol><h3 id="USB-连接"><a href="#USB-连接" class="headerlink" title="USB 连接"></a>USB 连接</h3><p>通过 USB 连接来正常使用 adb 需要保证几点：</p><ol><li><p>硬件状态正常。</p><p>包括 Android 设备处于正常开机状态，USB 连接线和各种接口完好。</p></li><li><p>Android 设备的开发者选项和 USB 调试模式已开启。</p><p>可以到「设置」-「开发者选项」-「Android 调试」查看。</p><p>如果在设置里找不到开发者选项，那需要通过一个彩蛋来让它显示出来：在「设置」-「关于手机」连续点击「版本号」7 次。</p></li><li><p>设备驱动状态正常。</p><p>这一点貌似在 Linux 和 Mac OS X 下不用操心，在 Windows 下有可能遇到需要安装驱动的情况，确认这一点可以右键「计算机」-「属性」，到「设备管理器」里查看相关设备上是否有黄色感叹号或问号，如果没有就说明驱动状态已经好了。否则可以下载一个手机助手类程序来安装驱动先。</p></li><li><p>通过 USB 线连接好电脑和设备后确认状态。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb devices</div></pre></td></tr></table></figure><p>如果能看到</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xxxxxx device</div></pre></td></tr></table></figure><p>说明连接成功。</p></li></ol><h3 id="无线连接（需要借助-USB-线）"><a href="#无线连接（需要借助-USB-线）" class="headerlink" title="无线连接（需要借助 USB 线）"></a>无线连接（需要借助 USB 线）</h3><p>除了可以通过 USB 连接设备与电脑来使用 adb，也可以通过无线连接——虽然连接过程中也有需要使用 USB 的步骤，但是连接成功之后你的设备就可以在一定范围内摆脱 USB 连接线的限制啦！</p><p>操作步骤：</p><ol><li><p>将 Android 设备与要运行 adb 的电脑连接到同一个局域网，比如连到同一个 WiFi。</p></li><li><p>将设备与电脑通过 USB 线连接。</p><p>应确保连接成功（可运行 <code>adb devices</code> 看是否能列出该设备）。</p></li><li><p>让设备在 5555 端口监听 TCP/IP 连接：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb tcpip 5555</div></pre></td></tr></table></figure></li><li><p>断开 USB 连接。</p></li><li><p>找到设备的 IP 地址。</p><p>一般能在「设置」-「关于手机」-「状态信息」-「IP地址」找到。</p></li><li><p>通过 IP 地址连接设备。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb connect &lt;device-ip-address&gt;</div></pre></td></tr></table></figure><p>这里的 <code>&lt;device-ip-address&gt;</code> 就是上一步中找到的设备 IP 地址。</p></li><li><p>确认连接状态。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb devices</div></pre></td></tr></table></figure><p>如果能看到</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;device-ip-address&gt;:5555 device</div></pre></td></tr></table></figure><p>说明连接成功。</p></li></ol><p>如果连接不了，请确认 Android 设备与电脑是连接到了同一个 WiFi，然后再次执行 <code>adb connect &lt;device-ip-address&gt;</code> 那一步；</p><p>如果还是不行的话，通过 <code>adb kill-server</code> 重新启动 adb 然后从头再来一次试试。</p><p><strong>断开无线连接</strong></p><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb disconnect &lt;device-ip-address&gt;</div></pre></td></tr></table></figure><h3 id="无线连接（无需借助-USB-线）"><a href="#无线连接（无需借助-USB-线）" class="headerlink" title="无线连接（无需借助 USB 线）"></a>无线连接（无需借助 USB 线）</h3><p><strong>注：需要 root 权限。</strong></p><p>上一节「无线连接（需要借助 USB 线）」是官方文档里介绍的方法，需要借助于 USB 数据线来实现无线连接。</p><p>既然我们想要实现无线连接，那能不能所有步骤下来都是无线的呢？答案是能的。</p><ol><li><p>在 Android 设备上安装一个终端模拟器。</p><p>已经安装过的设备可以跳过此步。我使用的终端模拟器下载地址是：<a href="https://jackpal.github.io/Android-Terminal-Emulator/" target="_blank" rel="external">Terminal Emulator for Android Downloads</a></p></li><li><p>将 Android 设备与要运行 adb 的电脑连接到同一个局域网，比如连到同一个 WiFi。</p></li><li><p>打开 Android 设备上的终端模拟器，在里面依次运行命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">su</div><div class="line">setprop service.adb.tcp.port 5555</div></pre></td></tr></table></figure></li><li><p>找到 Android 设备的 IP 地址。</p><p>一般能在「设置」-「关于手机」-「状态信息」-「IP地址」找到。</p></li><li><p>在电脑上通过 adb 和 IP 地址连接 Android 设备。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb connect &lt;device-ip-address&gt;</div></pre></td></tr></table></figure><p>这里的 <code>&lt;device-ip-address&gt;</code> 就是上一步中找到的设备 IP 地址。</p><p>如果能看到 <code>connected to &lt;device-ip-address&gt;:5555</code> 这样的输出则表示连接成功。</p></li></ol><h2 id="应用管理"><a href="#应用管理" class="headerlink" title="应用管理"></a>应用管理</h2><h3 id="查看应用列表"><a href="#查看应用列表" class="headerlink" title="查看应用列表"></a>查看应用列表</h3><p>查看应用列表的基本命令格式是</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell pm list packages [<span class="_">-f</span>] [<span class="_">-d</span>] [<span class="_">-e</span>] [<span class="_">-s</span>] [-3] [-i] [-u] [--user USER_ID] [FILTER]</div></pre></td></tr></table></figure><p>即在 <code>adb shell pm list packages</code> 的基础上可以加一些参数进行过滤查看不同的列表，支持的过滤参数如下：</p><table><thead><tr><th>参数</th><th>显示列表</th></tr></thead><tbody><tr><td>无</td><td>所有应用</td></tr><tr><td>-f</td><td>显示应用关联的 apk 文件</td></tr><tr><td>-d</td><td>只显示 disabled 的应用</td></tr><tr><td>-e</td><td>只显示 enabled 的应用</td></tr><tr><td>-s</td><td>只显示系统应用</td></tr><tr><td>-3</td><td>只显示第三方应用</td></tr><tr><td>-i</td><td>显示应用的 installer</td></tr><tr><td>-u</td><td>包含已卸载应用</td></tr><tr><td><code>&lt;FILTER&gt;</code></td><td>包名包含 <code>&lt;FILTER&gt;</code> 字符串</td></tr></tbody></table><h4 id="所有应用"><a href="#所有应用" class="headerlink" title="所有应用"></a>所有应用</h4><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell pm list packages</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">package:com.android.smoketest</div><div class="line">package:com.example.android.livecubes</div><div class="line">package:com.android.providers.telephony</div><div class="line">package:com.google.android.googlequicksearchbox</div><div class="line">package:com.android.providers.calendar</div><div class="line">package:com.android.providers.media</div><div class="line">package:com.android.protips</div><div class="line">package:com.android.documentsui</div><div class="line">package:com.android.gallery</div><div class="line">package:com.android.externalstorage</div><div class="line">...</div><div class="line">// other packages here</div><div class="line">...</div></pre></td></tr></table></figure><h4 id="系统应用"><a href="#系统应用" class="headerlink" title="系统应用"></a>系统应用</h4><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell pm list packages <span class="_">-s</span></div></pre></td></tr></table></figure><h4 id="第三方应用"><a href="#第三方应用" class="headerlink" title="第三方应用"></a>第三方应用</h4><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell pm list packages -3</div></pre></td></tr></table></figure><h4 id="包名包含某字符串的应用"><a href="#包名包含某字符串的应用" class="headerlink" title="包名包含某字符串的应用"></a>包名包含某字符串的应用</h4><p>比如要查看包名包含字符串 <code>mazhuang</code> 的应用列表，命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell pm list packages mazhuang</div></pre></td></tr></table></figure><p>当然也可以使用 grep 来过滤：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell pm list packages | grep mazhuang</div></pre></td></tr></table></figure><h3 id="安装-APK"><a href="#安装-APK" class="headerlink" title="安装 APK"></a>安装 APK</h3><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb install [-lrtsdg] &lt;path_to_apk&gt;</div></pre></td></tr></table></figure><p>参数：</p><p><code>adb install</code> 后面可以跟一些可选参数来控制安装 APK 的行为，可用参数及含义如下：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-l</td><td>将应用安装到保护目录 /mnt/asec</td></tr><tr><td>-r</td><td>允许覆盖安装</td></tr><tr><td>-t</td><td>允许安装 AndroidManifest.xml 里 application 指定 <code>android:testOnly=&quot;true&quot;</code> 的应用</td></tr><tr><td>-s</td><td>将应用安装到 sdcard</td></tr><tr><td>-d</td><td>允许降级覆盖安装</td></tr><tr><td>-g</td><td>授予所有运行时权限</td></tr></tbody></table><p>运行命令后如果见到类似如下输出（状态为 <code>Success</code>）代表安装成功：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[100%] /data/<span class="built_in">local</span>/tmp/1.apk</div><div class="line">	pkg: /data/<span class="built_in">local</span>/tmp/1.apk</div><div class="line">Success</div></pre></td></tr></table></figure><p>上面是当前最新版 v1.0.36 的 adb 的输出，会显示 push apk 文件到手机的进度百分比。</p><p>使用旧版本 adb 的输出则是这样的：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">12040 KB/s (22205609 bytes <span class="keyword">in</span> 1.801s)</div><div class="line">        pkg: /data/<span class="built_in">local</span>/tmp/SogouInput_android_v8.3_sweb.apk</div><div class="line">Success</div></pre></td></tr></table></figure><p>而如果状态为 <code>Failure</code> 则表示安装失败，比如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[100%] /data/<span class="built_in">local</span>/tmp/map-20160831.apk</div><div class="line">        pkg: /data/<span class="built_in">local</span>/tmp/map-20160831.apk</div><div class="line">Failure [INSTALL_FAILED_ALREADY_EXISTS]</div></pre></td></tr></table></figure><p>常见安装失败输出代码、含义及可能的解决办法如下：</p><table><thead><tr><th>输出</th><th>含义</th><th>解决办法</th></tr></thead><tbody><tr><td>INSTALL_FAILED_ALREADY_EXISTS</td><td>应用已经存在</td><td>使用 <code>-r</code> 参数</td></tr><tr><td>INSTALL_FAILED_INVALID_APK</td><td>无效的 APK 文件</td><td></td></tr><tr><td>INSTALL_FAILED_INVALID_URI</td><td>无效的 APK 文件名</td><td>确保 APK 文件名里无中文</td></tr><tr><td>INSTALL_FAILED_INSUFFICIENT_STORAGE</td><td>空间不足</td><td>清理空间</td></tr><tr><td>INSTALL_FAILED_DUPLICATE_PACKAGE</td><td>已经存在同名程序</td><td></td></tr><tr><td>INSTALL_FAILED_NO_SHARED_USER</td><td>请求的共享用户不存在</td><td></td></tr><tr><td>INSTALL_FAILED_UPDATE_INCOMPATIBLE</td><td>已经安装过签名不一样的同名应用，且数据没有移除</td><td></td></tr><tr><td>INSTALL_FAILED_SHARED_USER_INCOMPATIBLE</td><td>请求的共享用户存在但签名不一致</td><td></td></tr><tr><td>INSTALL_FAILED_MISSING_SHARED_LIBRARY</td><td>安装包使用了设备上不可用的共享库</td><td></td></tr><tr><td>INSTALL_FAILED_REPLACE_COULDNT_DELETE</td><td>替换时无法删除</td><td></td></tr><tr><td>INSTALL_FAILED_DEXOPT</td><td>dex 优化验证失败或空间不足</td><td></td></tr><tr><td>INSTALL_FAILED_OLDER_SDK</td><td>设备系统版本低于应用要求</td><td></td></tr><tr><td>INSTALL_FAILED_CONFLICTING_PROVIDER</td><td>设备里已经存在与应用里同名的 content provider</td><td></td></tr><tr><td>INSTALL_FAILED_NEWER_SDK</td><td>设备系统版本高于应用要求</td><td></td></tr><tr><td>INSTALL_FAILED_TEST_ONLY</td><td>应用是 test-only 的，但安装时没有指定 <code>-t</code> 参数</td><td></td></tr><tr><td>INSTALL_FAILED_CPU_ABI_INCOMPATIBLE</td><td>包含不兼容设备 CPU 应用程序二进制接口的 native code</td><td></td></tr><tr><td>INSTALL_FAILED_MISSING_FEATURE</td><td>应用使用了设备不可用的功能</td><td></td></tr><tr><td>INSTALL_FAILED_CONTAINER_ERROR</td><td>sdcard 访问失败</td><td>确认 sdcard 可用，或者安装到内置存储</td></tr><tr><td>INSTALL_FAILED_INVALID_INSTALL_LOCATION</td><td>不能安装到指定位置</td><td>切换安装位置，添加或删除 <code>-s</code> 参数</td></tr><tr><td>INSTALL_FAILED_MEDIA_UNAVAILABLE</td><td>安装位置不可用</td><td>一般为 sdcard，确认 sdcard 可用或安装到内置存储</td></tr><tr><td>INSTALL_FAILED_VERIFICATION_TIMEOUT</td><td>验证安装包超时</td><td></td></tr><tr><td>INSTALL_FAILED_VERIFICATION_FAILURE</td><td>验证安装包失败</td><td></td></tr><tr><td>INSTALL_FAILED_PACKAGE_CHANGED</td><td>应用与调用程序期望的不一致</td><td></td></tr><tr><td>INSTALL_FAILED_UID_CHANGED</td><td>以前安装过该应用，与本次分配的 UID 不一致</td><td>清除以前安装过的残留文件</td></tr><tr><td>INSTALL_FAILED_VERSION_DOWNGRADE</td><td>已经安装了该应用更高版本</td><td>使用 <code>-d</code> 参数</td></tr><tr><td>INSTALL_FAILED_PERMISSION_MODEL_DOWNGRADE</td><td>已安装 target SDK 支持运行时权限的同名应用，要安装的版本不支持运行时权限</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_NOT_APK</td><td>指定路径不是文件，或不是以 <code>.apk</code> 结尾</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_BAD_MANIFEST</td><td>无法解析的 AndroidManifest.xml 文件</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION</td><td>解析器遇到异常</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_NO_CERTIFICATES</td><td>安装包没有签名</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES</td><td>已安装该应用，且签名与 APK 文件不一致</td><td>先卸载设备上的该应用，再安装</td></tr><tr><td>INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING</td><td>解析 APK 文件时遇到 <code>CertificateEncodingException</code></td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME</td><td>manifest 文件里没有或者使用了无效的包名</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID</td><td>manifest 文件里指定了无效的共享用户 ID</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_MANIFEST_MALFORMED</td><td>解析 manifest 文件时遇到结构性错误</td><td></td></tr><tr><td>INSTALL_PARSE_FAILED_MANIFEST_EMPTY</td><td>在 manifest 文件里找不到找可操作标签（instrumentation 或 application）</td><td></td></tr><tr><td>INSTALL_FAILED_INTERNAL_ERROR</td><td>因系统问题安装失败</td><td></td></tr><tr><td>INSTALL_FAILED_USER_RESTRICTED</td><td>用户被限制安装应用</td><td></td></tr><tr><td>INSTALL_FAILED_DUPLICATE_PERMISSION</td><td>应用尝试定义一个已经存在的权限名称</td><td></td></tr><tr><td>INSTALL_FAILED_NO_MATCHING_ABIS</td><td>应用包含设备的应用程序二进制接口不支持的 native code</td><td></td></tr><tr><td>INSTALL_CANCELED_BY_USER</td><td>应用安装需要在设备上确认，但未操作设备或点了取消</td><td>在设备上同意安装</td></tr><tr><td>INSTALL_FAILED_ACWF_INCOMPATIBLE</td><td>应用程序与设备不兼容</td><td></td></tr><tr><td>does not contain AndroidManifest.xml</td><td>无效的 APK 文件</td><td></td></tr><tr><td>is not a valid zip file</td><td>无效的 APK 文件</td><td></td></tr><tr><td>Offline</td><td>设备未连接成功</td><td>先将设备与 adb 连接成功</td></tr><tr><td>unauthorized</td><td>设备未授权允许调试</td><td></td></tr><tr><td>error: device not found</td><td>没有连接成功的设备</td><td>先将设备与 adb 连接成功</td></tr><tr><td>protocol failure</td><td>设备已断开连接</td><td>先将设备与 adb 连接成功</td></tr><tr><td>Unknown option: -s</td><td>Android 2.2 以下不支持安装到 sdcard</td><td>不使用 <code>-s</code> 参数</td></tr><tr><td>No space left on devicerm</td><td>空间不足</td><td>清理空间</td></tr><tr><td>Permission denied … sdcard …</td><td>sdcard 不可用</td></tr></tbody></table><p>参考：<a href="https://github.com/android/platform_frameworks_base/blob/master/core%2Fjava%2Fandroid%2Fcontent%2Fpm%2FPackageManager.java" target="_blank" rel="external">PackageManager.java</a></p><p><em><code>adb install</code> 内部原理简介</em></p><p><code>adb install</code> 实际是分三步完成：</p><ol><li><p>push apk 文件到 /data/local/tmp。</p></li><li><p>调用 pm install 安装。</p></li><li><p>删除 /data/local/tmp 下的对应 apk 文件。</p></li></ol><p>所以，必要的时候也可以根据这个步骤，手动分步执行安装过程。</p><h3 id="卸载应用"><a href="#卸载应用" class="headerlink" title="卸载应用"></a>卸载应用</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb uninstall [-k] &lt;packagename&gt;</div></pre></td></tr></table></figure><p><code>&lt;packagename&gt;</code> 表示应用的包名，<code>-k</code> 参数可选，表示卸载应用但保留数据和缓存目录。</p><p>命令示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb uninstall com.qihoo360.mobilesafe</div></pre></td></tr></table></figure><p>表示卸载 360 手机卫士。</p><h3 id="清除应用数据与缓存"><a href="#清除应用数据与缓存" class="headerlink" title="清除应用数据与缓存"></a>清除应用数据与缓存</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell pm clear &lt;packagename&gt;</div></pre></td></tr></table></figure><p><code>&lt;packagename&gt;</code> 表示应用名包，这条命令的效果相当于在设置里的应用信息界面点击了「清除缓存」和「清除数据」。</p><p>命令示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell pm clear com.qihoo360.mobilesafe</div></pre></td></tr></table></figure><p>表示清除 360 手机卫士的数据和缓存。</p><h3 id="查看前台-Activity"><a href="#查看前台-Activity" class="headerlink" title="查看前台 Activity"></a>查看前台 Activity</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell dumpsys activity activities | grep mFocusedActivity</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mFocusedActivity: ActivityRecord&#123;8079d7e u0 com.cyanogenmod.trebuchet/com.android.launcher3.Launcher t42&#125;</div></pre></td></tr></table></figure><p>其中的 <code>com.cyanogenmod.trebuchet/com.android.launcher3.Launcher</code> 就是当前处于前台的 Activity。</p><h2 id="与应用交互"><a href="#与应用交互" class="headerlink" title="与应用交互"></a>与应用交互</h2><p>主要是使用 <code>am &lt;command&gt;</code> 命令，常用的 <code>&lt;command&gt;</code> 如下：</p><table><thead><tr><th>command</th><th>用途</th></tr></thead><tbody><tr><td><code>start [options] &lt;INTENT&gt;</code></td><td>启动 <code>&lt;INTENT&gt;</code> 指定的 Activity</td></tr><tr><td><code>startservice [options] &lt;INTENT&gt;</code></td><td>启动 <code>&lt;INTENT&gt;</code> 指定的 Service</td></tr><tr><td><code>broadcast [options] &lt;INTENT&gt;</code></td><td>发送 <code>&lt;INTENT&gt;</code> 指定的广播</td></tr><tr><td><code>force-stop &lt;packagename&gt;</code></td><td>停止 <code>&lt;packagename&gt;</code> 相关的进程</td></tr></tbody></table><p><code>&lt;INTENT&gt;</code> 参数很灵活，和写 Android 程序时代码里的 Intent 相对应。</p><p>用于决定 intent 对象的选项如下：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>-a &lt;ACTION&gt;</code></td><td>指定 action，比如 <code>android.intent.action.VIEW</code></td></tr><tr><td><code>-c &lt;CATEGORY&gt;</code></td><td>指定 category，比如 <code>android.intent.category.APP_CONTACTS</code></td></tr><tr><td><code>-n &lt;COMPONENT&gt;</code></td><td>指定完整 component 名，用于明确指定启动哪个 Activity，如 <code>com.example.app/.ExampleActivity</code></td></tr></tbody></table><p><code>&lt;INTENT&gt;</code> 里还能带数据，就像写代码时的 Bundle 一样：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td><code>--esn &lt;EXTRA_KEY&gt;</code></td><td>null 值（只有 key 名）</td></tr><tr><td>`-e</td><td>–es<extra_key><extra_string_value>`</extra_string_value></extra_key></td><td>string 值</td></tr><tr><td><code>--ez &lt;EXTRA_KEY&gt; &lt;EXTRA_BOOLEAN_VALUE&gt;</code></td><td>boolean 值</td></tr><tr><td><code>--ei &lt;EXTRA_KEY&gt; &lt;EXTRA_INT_VALUE&gt;</code></td><td>integer 值</td></tr><tr><td><code>--el &lt;EXTRA_KEY&gt; &lt;EXTRA_LONG_VALUE&gt;</code></td><td>long 值</td></tr><tr><td><code>--ef &lt;EXTRA_KEY&gt; &lt;EXTRA_FLOAT_VALUE&gt;</code></td><td>float 值</td></tr><tr><td><code>--eu &lt;EXTRA_KEY&gt; &lt;EXTRA_URI_VALUE&gt;</code></td><td>URI</td></tr><tr><td><code>--ecn &lt;EXTRA_KEY&gt; &lt;EXTRA_COMPONENT_NAME_VALUE&gt;</code></td><td>component name</td></tr><tr><td><code>--eia &lt;EXTRA_KEY&gt; &lt;EXTRA_INT_VALUE&gt;[,&lt;EXTRA_INT_VALUE...]</code></td><td>integer 数组</td></tr><tr><td><code>--ela &lt;EXTRA_KEY&gt; &lt;EXTRA_LONG_VALUE&gt;[,&lt;EXTRA_LONG_VALUE...]</code></td><td>long 数组</td></tr></tbody></table><h3 id="调起-Activity"><a href="#调起-Activity" class="headerlink" title="调起 Activity"></a>调起 Activity</h3><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell am start [options] &lt;INTENT&gt;</div></pre></td></tr></table></figure><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell am start -n com.tencent.mm/.ui.LauncherUI</div></pre></td></tr></table></figure><p>表示调起微信主界面。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell am start -n org.mazhuang.boottimemeasure/.MainActivity --es <span class="string">"toast"</span> <span class="string">"hello, world"</span></div></pre></td></tr></table></figure><p>表示调起 <code>org.mazhuang.boottimemeasure/.MainActivity</code> 并传给它 string 数据键值对 <code>toast - hello, world</code>。</p><h3 id="调起-Service"><a href="#调起-Service" class="headerlink" title="调起 Service"></a>调起 Service</h3><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell am startservice [options] &lt;INTENT&gt;</div></pre></td></tr></table></figure><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell am startservice -n com.tencent.mm/.plugin.accountsync.model.AccountAuthenticatorService</div></pre></td></tr></table></figure><p>表示调起微信的某 Service。</p><h3 id="发送广播"><a href="#发送广播" class="headerlink" title="发送广播"></a>发送广播</h3><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell am broadcast [options] &lt;INTENT&gt;</div></pre></td></tr></table></figure><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell am broadcast <span class="_">-a</span> android.intent.action.BOOT_COMPLETED -n org.mazhuang.boottimemeasure/.BootCompletedReceiver</div></pre></td></tr></table></figure><p>表示向 <code>org.mazhuang.boottimemeasure/.BootCompletedReceiver</code> 发送一个 <code>BOOT_COMPLETED</code> 广播，这类用法在测试的时候很实用，比如某个广播的场景很难制造，可以考虑通过这种方式来发送广播。</p><h3 id="强制停止应用"><a href="#强制停止应用" class="headerlink" title="强制停止应用"></a>强制停止应用</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell am force-stop &lt;packagename&gt;</div></pre></td></tr></table></figure><p>命令示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell am force-stop com.qihoo360.mobilesafe</div></pre></td></tr></table></figure><p>表示停止 360 安全卫士的一切进程与服务。</p><h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h3 id="复制设备里的文件到电脑"><a href="#复制设备里的文件到电脑" class="headerlink" title="复制设备里的文件到电脑"></a>复制设备里的文件到电脑</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb pull &lt;设备里的文件路径&gt; [电脑上的目录]</div></pre></td></tr></table></figure><p>其中 <code>电脑上的目录</code> 参数可以省略，默认复制到当前目录。</p><p>例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb pull /sdcard/sr.mp4 ~/tmp/</div></pre></td></tr></table></figure><p><em>小技巧：</em>设备上的文件路径可能需要 root 权限才能访问，如果你的设备已经 root 过，可以先使用 <code>adb shell</code> 和 <code>su</code> 命令在 adb shell 里获取 root 权限后，先 <code>cp /path/on/device /sdcard/filename</code> 将文件复制到 sdcard，然后 <code>adb pull /sdcard/filename /path/on/pc</code>。</p><h3 id="复制电脑里的文件到设备"><a href="#复制电脑里的文件到设备" class="headerlink" title="复制电脑里的文件到设备"></a>复制电脑里的文件到设备</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb push &lt;电脑上的文件路径&gt; &lt;设备里的目录&gt;</div></pre></td></tr></table></figure><p>例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb push ~/sr.mp4 /sdcard/</div></pre></td></tr></table></figure><p><em>小技巧：</em>设备上的文件路径普通权限可能无法直接写入，如果你的设备已经 root 过，可以先 <code>adb push /path/on/pc /sdcard/filename</code>，然后 <code>adb shell</code> 和 <code>su</code> 在 adb shell 里获取 root 权限后，<code>cp /sdcard/filename /path/on/device</code>。</p><h2 id="模拟按键-输入"><a href="#模拟按键-输入" class="headerlink" title="模拟按键/输入"></a>模拟按键/输入</h2><p>在 <code>adb shell</code> 里有个很实用的命令叫 <code>input</code>，通过它可以做一些有趣的事情。</p><p><code>input</code> 命令的完整 help 信息如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">Usage: input [&lt;<span class="built_in">source</span>&gt;] &lt;<span class="built_in">command</span>&gt; [&lt;arg&gt;...]</div><div class="line"></div><div class="line">The sources are:</div><div class="line">      mouse</div><div class="line">      keyboard</div><div class="line">      joystick</div><div class="line">      touchnavigation</div><div class="line">      touchpad</div><div class="line">      trackball</div><div class="line">      stylus</div><div class="line">      dpad</div><div class="line">      gesture</div><div class="line">      touchscreen</div><div class="line">      gamepad</div><div class="line"></div><div class="line">The commands and default sources are:</div><div class="line">      text &lt;string&gt; (Default: touchscreen)</div><div class="line">      keyevent [--longpress] &lt;key code number or name&gt; ... (Default: keyboard)</div><div class="line">      tap &lt;x&gt; &lt;y&gt; (Default: touchscreen)</div><div class="line">      swipe &lt;x1&gt; &lt;y1&gt; &lt;x2&gt; &lt;y2&gt; [duration(ms)] (Default: touchscreen)</div><div class="line">      press (Default: trackball)</div><div class="line">      roll &lt;dx&gt; &lt;dy&gt; (Default: trackball)</div></pre></td></tr></table></figure><p>比如使用 <code>adb shell input keyevent &lt;keycode&gt;</code> 命令，不同的 keycode 能实现不同的功能，完整的 keycode 列表详见 <a href="https://developer.android.com/reference/android/view/KeyEvent.html" target="_blank" rel="external">KeyEvent</a>，摘引部分我觉得有意思的如下：</p><table><thead><tr><th>keycode</th><th>含义</th></tr></thead><tbody><tr><td>3</td><td>HOME 键</td></tr><tr><td>4</td><td>返回键</td></tr><tr><td>5</td><td>打开拨号应用</td></tr><tr><td>6</td><td>挂断电话</td></tr><tr><td>24</td><td>增加音量</td></tr><tr><td>25</td><td>降低音量</td></tr><tr><td>26</td><td>电源键</td></tr><tr><td>27</td><td>拍照（需要在相机应用里）</td></tr><tr><td>64</td><td>打开浏览器</td></tr><tr><td>82</td><td>菜单键</td></tr><tr><td>85</td><td>播放/暂停</td></tr><tr><td>86</td><td>停止播放</td></tr><tr><td>87</td><td>播放下一首</td></tr><tr><td>88</td><td>播放上一首</td></tr><tr><td>122</td><td>移动光标到行首或列表顶部</td></tr><tr><td>123</td><td>移动光标到行末或列表底部</td></tr><tr><td>126</td><td>恢复播放</td></tr><tr><td>127</td><td>暂停播放</td></tr><tr><td>164</td><td>静音</td></tr><tr><td>176</td><td>打开系统设置</td></tr><tr><td>187</td><td>切换应用</td></tr><tr><td>207</td><td>打开联系人</td></tr><tr><td>208</td><td>打开日历</td></tr><tr><td>209</td><td>打开音乐</td></tr><tr><td>210</td><td>打开计算器</td></tr><tr><td>220</td><td>降低屏幕亮度</td></tr><tr><td>221</td><td>提高屏幕亮度</td></tr><tr><td>223</td><td>系统休眠</td></tr><tr><td>224</td><td>点亮屏幕</td></tr><tr><td>231</td><td>打开语音助手</td></tr><tr><td>276</td><td>如果没有 wakelock 则让系统休眠</td></tr></tbody></table><p>下面是 <code>input</code> 命令的一些用法举例。</p><h3 id="电源键"><a href="#电源键" class="headerlink" title="电源键"></a>电源键</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 26</div></pre></td></tr></table></figure><p>执行效果相当于按电源键。</p><h3 id="菜单键"><a href="#菜单键" class="headerlink" title="菜单键"></a>菜单键</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 82</div></pre></td></tr></table></figure><h3 id="HOME-键"><a href="#HOME-键" class="headerlink" title="HOME 键"></a>HOME 键</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 3</div></pre></td></tr></table></figure><h3 id="返回键"><a href="#返回键" class="headerlink" title="返回键"></a>返回键</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 4</div></pre></td></tr></table></figure><h3 id="音量控制"><a href="#音量控制" class="headerlink" title="音量控制"></a>音量控制</h3><p>增加音量：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 24</div></pre></td></tr></table></figure><p>降低音量：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 25</div></pre></td></tr></table></figure><p>静音：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 164</div></pre></td></tr></table></figure><h3 id="媒体控制"><a href="#媒体控制" class="headerlink" title="媒体控制"></a>媒体控制</h3><p>播放/暂停：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 85</div></pre></td></tr></table></figure><p>停止播放：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 86</div></pre></td></tr></table></figure><p>播放下一首：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 87</div></pre></td></tr></table></figure><p>播放上一首：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 88</div></pre></td></tr></table></figure><p>恢复播放：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 126</div></pre></td></tr></table></figure><p>暂停播放：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 127</div></pre></td></tr></table></figure><h3 id="点亮-熄灭屏幕"><a href="#点亮-熄灭屏幕" class="headerlink" title="点亮/熄灭屏幕"></a>点亮/熄灭屏幕</h3><p>可以通过上文讲述过的模拟电源键来切换点亮和熄灭屏幕，但如果明确地想要点亮或者熄灭屏幕，那可以使用如下方法。</p><p>点亮屏幕：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 224</div></pre></td></tr></table></figure><p>熄灭屏幕：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input keyevent 223</div></pre></td></tr></table></figure><h3 id="滑动解锁"><a href="#滑动解锁" class="headerlink" title="滑动解锁"></a>滑动解锁</h3><p>如果锁屏没有密码，是通过滑动手势解锁，那么可以通过 <code>input swipe</code> 来解锁。</p><p>命令（参数以机型 Nexus 5，向上滑动手势解锁举例）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input swipe 300 1000 300 500</div></pre></td></tr></table></figure><p>参数 <code>300 1000 300 500</code> 分别表示<code>起始点x坐标 起始点y坐标 结束点x坐标 结束点y坐标</code>。</p><h3 id="输入文本"><a href="#输入文本" class="headerlink" title="输入文本"></a>输入文本</h3><p>在焦点处于某文本框时，可以通过 <code>input</code> 命令来输入文本。</p><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell input text hello</div></pre></td></tr></table></figure><p>现在 <code>hello</code> 出现在文本框了。</p><h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><p>Android 系统的日志分为两部分，底层的 Linux 内核日志输出到 /proc/kmsg，Android 的日志输出到 /dev/log。</p><h3 id="Android-日志"><a href="#Android-日志" class="headerlink" title="Android 日志"></a>Android 日志</h3><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[adb] logcat [&lt;option&gt;] ... [&lt;filter-spec&gt;] ...</div></pre></td></tr></table></figure><p>常用用法列举如下：</p><h4 id="按级别过滤日志"><a href="#按级别过滤日志" class="headerlink" title="按级别过滤日志"></a>按级别过滤日志</h4><p>Android 的日志分为如下几个级别：</p><ul><li>V —— Verbose（最低，输出得最多）</li><li>D —— Debug</li><li>I —— Info</li><li>W —— Warning</li><li>E —— Error</li><li>F —— Fatal</li><li>S —— Silent（最高，啥也不输出）</li></ul><p>按某级别过滤日志则会将该级别及以上的日志输出。</p><p>比如，命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb logcat *:W</div></pre></td></tr></table></figure><p>会将 Warning、Error、Fatal 和 Silent 日志输出。</p><h4 id="按-tag-和级别过滤日志"><a href="#按-tag-和级别过滤日志" class="headerlink" title="按 tag 和级别过滤日志"></a>按 tag 和级别过滤日志</h4><p>比如，命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb logcat ActivityManager:I MyApp:D *:S</div></pre></td></tr></table></figure><p>表示输出 tag <code>ActivityManager</code> 的 Info 以上级别日志，输出 tag <code>MyApp</code> 的 Debug 以上级别日志，及其它 tag 的 Silent 级别日志（即屏蔽其它 tag 日志）。</p><h4 id="日志格式"><a href="#日志格式" class="headerlink" title="日志格式"></a>日志格式</h4><p>可以用 <code>adb logcat -v &lt;format&gt;</code> 选项指定日志输出格式。</p><p>日志支持按以下几种 <code>&lt;format&gt;</code>：</p><ul><li><p>brief</p><p>默认格式。格式为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;priority&gt;/&lt;tag&gt;(&lt;pid&gt;): &lt;message&gt;</div></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">D/HeadsetStateMachine( 1785): Disconnected process message: 10, size: 0</div></pre></td></tr></table></figure></li><li><p>process</p><p>格式为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;priority&gt;(&lt;pid&gt;) &lt;message&gt;</div></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">D( 1785) Disconnected process message: 10, size: 0  (HeadsetStateMachine)</div></pre></td></tr></table></figure></li><li><p>tag</p><p>格式为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;priority&gt;/&lt;tag&gt;: &lt;message&gt;</div></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">D/HeadsetStateMachine: Disconnected process message: 10, size: 0</div></pre></td></tr></table></figure></li><li><p>raw</p><p>格式为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;message&gt;</div></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Disconnected process message: 10, size: 0</div></pre></td></tr></table></figure></li><li><p>time</p><p>格式为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;datetime&gt; &lt;priority&gt;/&lt;tag&gt;(&lt;pid&gt;): &lt;message&gt;</div></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">08-28 22:39:39.974 D/HeadsetStateMachine( 1785): Disconnected process message: 10, size: 0</div></pre></td></tr></table></figure></li><li><p>threadtime</p><p>格式为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;datetime&gt; &lt;pid&gt; &lt;tid&gt; &lt;priority&gt; &lt;tag&gt;: &lt;message&gt;</div></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">08-28 22:39:39.974  1785  1832 D HeadsetStateMachine: Disconnected process message: 10, size: 0</div></pre></td></tr></table></figure></li><li><p>long</p><p>格式为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[ &lt;datetime&gt; &lt;pid&gt;:&lt;tid&gt; &lt;priority&gt;/&lt;tag&gt; ]</div><div class="line">&lt;message&gt;</div></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[ 08-28 22:39:39.974  1785: 1832 D/HeadsetStateMachine ]</div><div class="line">Disconnected process message: 10, size: 0</div></pre></td></tr></table></figure></li></ul><p>指定格式可与上面的过滤同时使用。比如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb logcat -v long ActivityManager:I *:S</div></pre></td></tr></table></figure><h4 id="清空日志"><a href="#清空日志" class="headerlink" title="清空日志"></a>清空日志</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb logcat -c</div></pre></td></tr></table></figure><h3 id="内核日志"><a href="#内核日志" class="headerlink" title="内核日志"></a>内核日志</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell dmesg</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;6&gt;[14201.684016] PM: noirq resume of devices complete after 0.982 msecs</div><div class="line">&lt;6&gt;[14201.685525] PM: early resume of devices complete after 0.838 msecs</div><div class="line">&lt;6&gt;[14201.753642] PM: resume of devices complete after 68.106 msecs</div><div class="line">&lt;4&gt;[14201.755954] Restarting tasks ... done.</div><div class="line">&lt;6&gt;[14201.771229] PM: <span class="built_in">suspend</span> <span class="built_in">exit</span> 2016-08-28 13:31:32.679217193 UTC</div><div class="line">&lt;6&gt;[14201.872373] PM: <span class="built_in">suspend</span> entry 2016-08-28 13:31:32.780363596 UTC</div><div class="line">&lt;6&gt;[14201.872498] PM: Syncing filesystems ... done.</div></pre></td></tr></table></figure><p>中括号里的 <code>[14201.684016]</code> 代表内核开始启动后的时间，单位为秒。</p><p>通过内核日志我们可以做一些事情，比如衡量内核启动时间，在系统启动完毕后的内核日志里找到 <code>Freeing init memory</code> 那一行前面的时间就是。</p><h2 id="查看设备信息"><a href="#查看设备信息" class="headerlink" title="查看设备信息"></a>查看设备信息</h2><h3 id="型号"><a href="#型号" class="headerlink" title="型号"></a>型号</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell getprop ro.product.model</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Nexus 5</div></pre></td></tr></table></figure><h3 id="电池状况"><a href="#电池状况" class="headerlink" title="电池状况"></a>电池状况</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell dumpsys battery</div></pre></td></tr></table></figure><p>输入示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Current Battery Service state:</div><div class="line">  AC powered: <span class="literal">false</span></div><div class="line">  USB powered: <span class="literal">true</span></div><div class="line">  Wireless powered: <span class="literal">false</span></div><div class="line">  status: 2</div><div class="line">  health: 2</div><div class="line">  present: <span class="literal">true</span></div><div class="line">  level: 44</div><div class="line">  scale: 100</div><div class="line">  voltage: 3872</div><div class="line">  temperature: 280</div><div class="line">  technology: Li-poly</div></pre></td></tr></table></figure><p>其中 <code>scale</code> 代表最大电量，<code>level</code> 代表当前电量。上面的输出表示还剩下 44% 的电量。</p><h3 id="屏幕分辨率"><a href="#屏幕分辨率" class="headerlink" title="屏幕分辨率"></a>屏幕分辨率</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell wm size</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Physical size: 1080x1920</div></pre></td></tr></table></figure><p>该设备屏幕分辨率为 1080px * 1920px。</p><h3 id="屏幕密度"><a href="#屏幕密度" class="headerlink" title="屏幕密度"></a>屏幕密度</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell wm density</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Physical density: 420</div></pre></td></tr></table></figure><p>该设备屏幕密度为 420dpi。</p><h3 id="显示屏参数"><a href="#显示屏参数" class="headerlink" title="显示屏参数"></a>显示屏参数</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell dumpsys window displays</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">WINDOW MANAGER DISPLAY CONTENTS (dumpsys window displays)</div><div class="line">  Display: mDisplayId=0</div><div class="line">    init=1080x1920 420dpi cur=1080x1920 app=1080x1794 rng=1080x1017-1810x1731</div><div class="line">    deferred=<span class="literal">false</span> layoutNeeded=<span class="literal">false</span></div></pre></td></tr></table></figure><p>其中 <code>mDisplayId</code> 为 显示屏编号，<code>init</code> 是初始分辨率和屏幕密度，<code>app</code> 的高度比 <code>init</code> 里的要小，表示屏幕底部有虚拟按键，高度为 1920 - 1794 = 126px 合 42dp。</p><h3 id="android-id"><a href="#android-id" class="headerlink" title="android_id"></a>android_id</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell settings get secure android_id</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">51b6be48bac8c569</div></pre></td></tr></table></figure><h3 id="IMEI"><a href="#IMEI" class="headerlink" title="IMEI"></a>IMEI</h3><p>在 Android 4.4 及以下版本可通过如下命令获取 IMEI：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell dumpsys iphonesubinfo</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Phone Subscriber Info:</div><div class="line">  Phone Type = GSM</div><div class="line">  Device ID = 860955027785041</div></pre></td></tr></table></figure><p>其中的 <code>Device ID</code> 就是 IMEI。</p><p>而在 Android 5.0 及以上版本里这个命令输出为空，得通过其它方式获取了（需要 root 权限）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">adb shell</div><div class="line">su</div><div class="line">service call iphonesubinfo 1</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Result: Parcel(</div><div class="line">  0x00000000: 00000000 0000000f 00360038 00390030 <span class="string">'........8.6.0.9.'</span></div><div class="line">  0x00000010: 00350035 00320030 00370037 00350038 <span class="string">'5.5.0.2.7.7.8.5.'</span></div><div class="line">  0x00000020: 00340030 00000031                   <span class="string">'0.4.1...        '</span>)</div></pre></td></tr></table></figure><p>把里面的有效内容提取出来就是 IMEI 了，比如这里的是 <code>860955027785041</code>。</p><p>参考：<a href="http://stackoverflow.com/questions/27002663/adb-shell-dumpsys-iphonesubinfo-not-working-since-android-5-0-lollipop" target="_blank" rel="external">adb shell dumpsys iphonesubinfo not working since Android 5.0 Lollipop</a></p><h3 id="Android-系统版本"><a href="#Android-系统版本" class="headerlink" title="Android 系统版本"></a>Android 系统版本</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell getprop ro.build.version.release</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">5.0.2</div></pre></td></tr></table></figure><h3 id="Mac-地址"><a href="#Mac-地址" class="headerlink" title="Mac 地址"></a>Mac 地址</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell cat /sys/class/net/wlan0/address</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f8:a9:d0:17:42:4d</div></pre></td></tr></table></figure><h3 id="CPU-信息"><a href="#CPU-信息" class="headerlink" title="CPU 信息"></a>CPU 信息</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell cat /proc/cpuinfo</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">Processor       : ARMv7 Processor rev 0 (v7l)</div><div class="line">processor       : 0</div><div class="line">BogoMIPS        : 38.40</div><div class="line"></div><div class="line">processor       : 1</div><div class="line">BogoMIPS        : 38.40</div><div class="line"></div><div class="line">processor       : 2</div><div class="line">BogoMIPS        : 38.40</div><div class="line"></div><div class="line">processor       : 3</div><div class="line">BogoMIPS        : 38.40</div><div class="line"></div><div class="line">Features        : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt</div><div class="line">CPU implementer : 0x51</div><div class="line">CPU architecture: 7</div><div class="line">CPU variant     : 0x2</div><div class="line">CPU part        : 0x06f</div><div class="line">CPU revision    : 0</div><div class="line"></div><div class="line">Hardware        : Qualcomm MSM 8974 HAMMERHEAD (Flattened Device Tree)</div><div class="line">Revision        : 000b</div><div class="line">Serial          : 0000000000000000</div></pre></td></tr></table></figure><p>这是 Nexus 5 的 CPU 信息，我们从输出里可以看到使用的硬件是 <code>Qualcomm MSM 8974</code>，processor 的编号是 0 到 3，所以它是四核的，采用的架构是 <code>ARMv7 Processor rev 0 (v71)</code>。</p><h3 id="内存信息"><a href="#内存信息" class="headerlink" title="内存信息"></a>内存信息</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell cat /proc/meminfo</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">MemTotal:        1027424 kB</div><div class="line">MemFree:          486564 kB</div><div class="line">Buffers:           15224 kB</div><div class="line">Cached:            72464 kB</div><div class="line">SwapCached:        24152 kB</div><div class="line">Active:           110572 kB</div><div class="line">Inactive:         259060 kB</div><div class="line">Active(anon):      79176 kB</div><div class="line">Inactive(anon):   207736 kB</div><div class="line">Active(file):      31396 kB</div><div class="line">Inactive(file):    51324 kB</div><div class="line">Unevictable:        3948 kB</div><div class="line">Mlocked:               0 kB</div><div class="line">HighTotal:        409600 kB</div><div class="line">HighFree:         132612 kB</div><div class="line">LowTotal:         617824 kB</div><div class="line">LowFree:          353952 kB</div><div class="line">SwapTotal:        262140 kB</div><div class="line">SwapFree:         207572 kB</div><div class="line">Dirty:                 0 kB</div><div class="line">Writeback:             0 kB</div><div class="line">AnonPages:        265324 kB</div><div class="line">Mapped:            47072 kB</div><div class="line">Shmem:              1020 kB</div><div class="line">Slab:              57372 kB</div><div class="line">SReclaimable:       7692 kB</div><div class="line">SUnreclaim:        49680 kB</div><div class="line">KernelStack:        4512 kB</div><div class="line">PageTables:         5912 kB</div><div class="line">NFS_Unstable:          0 kB</div><div class="line">Bounce:                0 kB</div><div class="line">WritebackTmp:          0 kB</div><div class="line">CommitLimit:      775852 kB</div><div class="line">Committed_AS:   13520632 kB</div><div class="line">VmallocTotal:     385024 kB</div><div class="line">VmallocUsed:       61004 kB</div><div class="line">VmallocChunk:     209668 kB</div></pre></td></tr></table></figure><p>其中，<code>MemTotal</code> 就是设备的总内存，<code>MemFree</code> 是当前空闲内存。</p><h3 id="更多硬件与系统属性"><a href="#更多硬件与系统属性" class="headerlink" title="更多硬件与系统属性"></a>更多硬件与系统属性</h3><p>设备的更多硬件与系统属性可以通过如下命令查看：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell cat /system/build.prop</div></pre></td></tr></table></figure><p>这会输出很多信息，包括前面几个小节提到的「型号」和「Android 系统版本」等。</p><p>输出里还包括一些其它有用的信息，它们也可通过 <code>adb shell getprop &lt;属性名&gt;</code> 命令单独查看，列举一部分属性如下：</p><table><thead><tr><th>属性名</th><th>含义</th></tr></thead><tbody><tr><td>ro.build.version.sdk</td><td>SDK 版本</td></tr><tr><td>ro.build.version.release</td><td>Android 系统版本</td></tr><tr><td>ro.build.version.security_patch</td><td>Android 安全补丁程序级别</td></tr><tr><td>ro.product.model</td><td>型号</td></tr><tr><td>ro.product.brand</td><td>品牌</td></tr><tr><td>ro.product.name</td><td>设备名</td></tr><tr><td>ro.product.board</td><td>处理器型号</td></tr><tr><td>ro.product.cpu.abilist</td><td>CPU 支持的 abi 列表</td></tr><tr><td>persist.sys.isUsbOtgEnabled</td><td>是否支持 OTG</td></tr><tr><td>dalvik.vm.heapsize</td><td>每个应用程序的内存上限</td></tr><tr><td>ro.sf.lcd_density</td><td>屏幕密度</td></tr></tbody></table><h2 id="实用功能"><a href="#实用功能" class="headerlink" title="实用功能"></a>实用功能</h2><h3 id="屏幕截图"><a href="#屏幕截图" class="headerlink" title="屏幕截图"></a>屏幕截图</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell screencap -p /sdcard/sc.png</div></pre></td></tr></table></figure><p>然后将 png 文件导出到电脑：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb pull /sdcard/sc.png</div></pre></td></tr></table></figure><p>可以使用 <code>adb shell screencap -h</code> 查看 <code>screencap</code> 命令的帮助信息，下面是两个有意义的参数及含义：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-p</td><td>指定保存文件为 png 格式</td></tr><tr><td>-d display-id</td><td>指定截图的显示屏编号（有多显示屏的情况下）</td></tr></tbody></table><p>实测如果指定文件名以 <code>.png</code> 结尾时可以省略 -p 参数；否则需要使用 -p 参数。如果不指定文件名，截图文件的内容将直接输出到 stdout。</p><h3 id="录制屏幕"><a href="#录制屏幕" class="headerlink" title="录制屏幕"></a>录制屏幕</h3><p>录制屏幕以 mp4 格式保存到 /sdcard：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell screenrecord /sdcard/filename.mp4</div></pre></td></tr></table></figure><p>需要停止时按 <kbd>Ctrl-C</kbd>，默认录制时间和最长录制时间都是 180 秒。</p><p>如果需要导出到电脑：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb pull /sdcard/filename.mp4</div></pre></td></tr></table></figure><p>可以使用 <code>adb shell screenrecord --help</code> 查看 <code>screenrecord</code> 命令的帮助信息，下面是常见参数及含义：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>–size WIDTHxHEIGHT</td><td>视频的尺寸，比如 <code>1280x720</code>，默认是屏幕分辨率。</td></tr><tr><td>–bit-rate RATE</td><td>视频的比特率，默认是 4Mbps。</td></tr><tr><td>–time-limit TIME</td><td>录制时长，单位秒。</td></tr><tr><td>–verbose</td><td>输出更多信息。</td></tr></tbody></table><h3 id="重新挂载-system-分区为可写"><a href="#重新挂载-system-分区为可写" class="headerlink" title="重新挂载 system 分区为可写"></a>重新挂载 system 分区为可写</h3><p><strong>注：需要 root 权限。</strong></p><p>/system 分区默认挂载为只读，但有些操作比如给 Android 系统添加命令、删除自带应用等需要对 /system 进行写操作，所以需要重新挂载它为可读写。</p><p>步骤：</p><ol><li><p>进入 shell 并切换到 root 用户权限。</p><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb shell</div><div class="line">su</div></pre></td></tr></table></figure></li><li><p>查看当前分区挂载情况。</p><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mount</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">rootfs / rootfs ro,relatime 0 0</div><div class="line">tmpfs /dev tmpfs rw,seclabel,nosuid,relatime,mode=755 0 0</div><div class="line">devpts /dev/pts devpts rw,seclabel,relatime,mode=600 0 0</div><div class="line">proc /proc proc rw,relatime 0 0</div><div class="line">sysfs /sys sysfs rw,seclabel,relatime 0 0</div><div class="line">selinuxfs /sys/fs/selinux selinuxfs rw,relatime 0 0</div><div class="line">debugfs /sys/kernel/debug debugfs rw,relatime 0 0</div><div class="line">none /var tmpfs rw,seclabel,relatime,mode=770,gid=1000 0 0</div><div class="line">none /acct cgroup rw,relatime,cpuacct 0 0</div><div class="line">none /sys/fs/cgroup tmpfs rw,seclabel,relatime,mode=750,gid=1000 0 0</div><div class="line">none /sys/fs/cgroup/memory cgroup rw,relatime,memory 0 0</div><div class="line">tmpfs /mnt/asec tmpfs rw,seclabel,relatime,mode=755,gid=1000 0 0</div><div class="line">tmpfs /mnt/obb tmpfs rw,seclabel,relatime,mode=755,gid=1000 0 0</div><div class="line">none /dev/memcg cgroup rw,relatime,memory 0 0</div><div class="line">none /dev/cpuctl cgroup rw,relatime,cpu 0 0</div><div class="line">none /sys/fs/cgroup tmpfs rw,seclabel,relatime,mode=750,gid=1000 0 0</div><div class="line">none /sys/fs/cgroup/memory cgroup rw,relatime,memory 0 0</div><div class="line">none /sys/fs/cgroup/freezer cgroup rw,relatime,freezer 0 0</div><div class="line">/dev/block/platform/msm_sdcc.1/by-name/system /system ext4 ro,seclabel,relatime,data=ordered 0 0</div><div class="line">/dev/block/platform/msm_sdcc.1/by-name/userdata /data ext4 rw,seclabel,nosuid,nodev,relatime,noauto_da_alloc,data=ordered 0 0</div><div class="line">/dev/block/platform/msm_sdcc.1/by-name/cache /cache ext4 rw,seclabel,nosuid,nodev,relatime,data=ordered 0 0</div><div class="line">/dev/block/platform/msm_sdcc.1/by-name/persist /persist ext4 rw,seclabel,nosuid,nodev,relatime,data=ordered 0 0</div><div class="line">/dev/block/platform/msm_sdcc.1/by-name/modem /firmware vfat ro,context=u:object_r:firmware_file:s0,relatime,uid=1000,gid=1000,fmask=0337,dmask=0227,codepage=cp437,iocharset=iso8859-1,shortname=lower,errors=remount-ro 0 0</div><div class="line">/dev/fuse /mnt/shell/emulated fuse rw,nosuid,nodev,relatime,user_id=1023,group_id=1023,default_permissions,allow_other 0 0</div><div class="line">/dev/fuse /mnt/shell/emulated/0 fuse rw,nosuid,nodev,relatime,user_id=1023,group_id=1023,default_permissions,allow_other 0 0</div></pre></td></tr></table></figure><p>找到其中我们关注的带 /system 的那一行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/dev/block/platform/msm_sdcc.1/by-name/system /system ext4 ro,seclabel,relatime,data=ordered 0 0</div></pre></td></tr></table></figure></li><li><p>重新挂载。</p><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mount -o remount,rw -t yaffs2 /dev/block/platform/msm_sdcc.1/by-name/system /system</div></pre></td></tr></table></figure><p>这里的 <code>/dev/block/platform/msm_sdcc.1/by-name/system</code> 就是我们从上一步的输出里得到的文件路径。</p></li></ol><p>如果输出没有提示错误的话，操作就成功了，可以对 /system 下的文件为所欲为了。</p><h3 id="查看连接过的-WiFi-密码"><a href="#查看连接过的-WiFi-密码" class="headerlink" title="查看连接过的 WiFi 密码"></a>查看连接过的 WiFi 密码</h3><p><strong>注：需要 root 权限。</strong></p><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">adb shell</div><div class="line">su</div><div class="line">cat /data/misc/wifi/*.conf</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">network=&#123;</div><div class="line">	ssid=<span class="string">"TP-LINK_9DFC"</span></div><div class="line">	scan_ssid=1</div><div class="line">	psk=<span class="string">"123456789"</span></div><div class="line">	key_mgmt=WPA-PSK</div><div class="line">	group=CCMP TKIP</div><div class="line">	auth_alg=OPEN</div><div class="line">	sim_num=1</div><div class="line">	priority=13893</div><div class="line">&#125;</div><div class="line"></div><div class="line">network=&#123;</div><div class="line">	ssid=<span class="string">"TP-LINK_F11E"</span></div><div class="line">	psk=<span class="string">"987654321"</span></div><div class="line">	key_mgmt=WPA-PSK</div><div class="line">	sim_num=1</div><div class="line">	priority=17293</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>ssid</code> 即为我们在 WLAN 设置里看到的名称，<code>psk</code> 为密码，<code>key_mgmt</code> 为安全加密方式。</p><h3 id="设置系统日期和时间"><a href="#设置系统日期和时间" class="headerlink" title="设置系统日期和时间"></a>设置系统日期和时间</h3><p><strong>注：需要 root 权限。</strong></p><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">adb shell</div><div class="line">su</div><div class="line">date <span class="_">-s</span> 20160823.131500</div></pre></td></tr></table></figure><p>表示将系统日期和时间更改为 2016 年 08 月 23 日 13 点 15 分 00 秒。</p><h3 id="重启手机"><a href="#重启手机" class="headerlink" title="重启手机"></a>重启手机</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb reboot</div></pre></td></tr></table></figure><h3 id="检测设备是否已-root"><a href="#检测设备是否已-root" class="headerlink" title="检测设备是否已 root"></a>检测设备是否已 root</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb shell</div><div class="line">su</div></pre></td></tr></table></figure><p>此时命令行提示符是 <code>$</code> 则表示没有 root 权限，是 <code>#</code> 则表示已 root。</p><h3 id="使用-Monkey-进行压力测试"><a href="#使用-Monkey-进行压力测试" class="headerlink" title="使用 Monkey 进行压力测试"></a>使用 Monkey 进行压力测试</h3><p>Monkey 可以生成伪随机用户事件来模拟单击、触摸、手势等操作，可以对正在开发中的程序进行随机压力测试。</p><p>简单用法：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell monkey -p &lt;packagename&gt; -v 500</div></pre></td></tr></table></figure><p>表示向 <code>&lt;packagename&gt;</code> 指定的应用程序发送 500 个伪随机事件。</p><p>Monkey 的详细用法参考 <a href="https://developer.android.com/studio/test/monkey.html" target="_blank" rel="external">官方文档</a>。</p><h3 id="开启-关闭-WiFi"><a href="#开启-关闭-WiFi" class="headerlink" title="开启/关闭 WiFi"></a>开启/关闭 WiFi</h3><p><strong>注：需要 root 权限。</strong></p><p>有时需要控制设备的 WiFi 状态，可以用以下指令完成。</p><p>开启 WiFi：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb root</div><div class="line">adb shell svc wifi <span class="built_in">enable</span></div></pre></td></tr></table></figure><p>关闭 WiFi：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb root</div><div class="line">adb shell svc wifi <span class="built_in">disable</span></div></pre></td></tr></table></figure><p>若执行成功，输出为空；若未取得 root 权限执行此命令，将执行失败，输出 <code>Killed</code>。</p><h2 id="刷机相关命令"><a href="#刷机相关命令" class="headerlink" title="刷机相关命令"></a>刷机相关命令</h2><h3 id="重启到-Recovery-模式"><a href="#重启到-Recovery-模式" class="headerlink" title="重启到 Recovery 模式"></a>重启到 Recovery 模式</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb reboot recovery</div></pre></td></tr></table></figure><h3 id="从-Recovery-重启到-Android"><a href="#从-Recovery-重启到-Android" class="headerlink" title="从 Recovery 重启到 Android"></a>从 Recovery 重启到 Android</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb reboot</div></pre></td></tr></table></figure><h3 id="重启到-Fastboot-模式"><a href="#重启到-Fastboot-模式" class="headerlink" title="重启到 Fastboot 模式"></a>重启到 Fastboot 模式</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb reboot bootloader</div></pre></td></tr></table></figure><h3 id="通过-sideload-更新系统"><a href="#通过-sideload-更新系统" class="headerlink" title="通过 sideload 更新系统"></a>通过 sideload 更新系统</h3><p>如果我们下载了 Android 设备对应的系统更新包到电脑上，那么也可以通过 adb 来完成更新。</p><p>以 Recovery 模式下更新为例：</p><ol><li><p>重启到 Recovery 模式。</p><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb reboot recovery</div></pre></td></tr></table></figure></li><li><p>在设备的 Recovery 界面上操作进入 <code>Apply update</code>-<code>Apply from ADB</code>。</p><p>注：不同的 Recovery 菜单可能与此有差异，有的是一级菜单就有 <code>Apply update from ADB</code>。</p></li><li><p>通过 adb 上传和更新系统。</p><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb sideload &lt;path-to-update.zip&gt;</div></pre></td></tr></table></figure></li></ol><h2 id="更多-adb-shell-命令"><a href="#更多-adb-shell-命令" class="headerlink" title="更多 adb shell 命令"></a>更多 adb shell 命令</h2><p>Android 系统是基于 Linux 内核的，所以 Linux 里的很多命令在 Android 里也有相同或类似的实现，在 <code>adb shell</code> 里可以调用。本文档前面的部分内容已经用到了 <code>adb shell</code> 命令。</p><h3 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell ps</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">USER     PID   PPID  VSIZE  RSS     WCHAN    PC        NAME</div><div class="line">root      1     0     8904   788   ffffffff 00000000 S /init</div><div class="line">root      2     0     0      0     ffffffff 00000000 S kthreadd</div><div class="line">...</div><div class="line">u0_a71    7779  5926  1538748 48896 ffffffff 00000000 S com.sohu.inputmethod.sogou:classic</div><div class="line">u0_a58    7963  5926  1561916 59568 ffffffff 00000000 S org.mazhuang.boottimemeasure</div><div class="line">...</div><div class="line">shell     8750  217   10640  740   00000000 b6f28340 R ps</div></pre></td></tr></table></figure><p>各列含义：</p><table><thead><tr><th>列名</th><th>含义</th></tr></thead><tbody><tr><td>USER</td><td>所属用户</td></tr><tr><td>PID</td><td>进程 ID</td></tr><tr><td>PPID</td><td>父进程 ID</td></tr><tr><td>NAME</td><td>进程名</td></tr></tbody></table><h3 id="查看实时资源占用情况"><a href="#查看实时资源占用情况" class="headerlink" title="查看实时资源占用情况"></a>查看实时资源占用情况</h3><p>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell top</div></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">User 0%, System 6%, IOW 0%, IRQ 0%</div><div class="line">User 3 + Nice 0 + Sys 21 + Idle 280 + IOW 0 + IRQ 0 + SIRQ 3 = 307</div><div class="line"></div><div class="line">  PID PR CPU% S  <span class="comment">#THR     VSS     RSS PCY UID      Name</span></div><div class="line"> 8763  0   3% R     1  10640K   1064K  <span class="built_in">fg</span> shell    top</div><div class="line">  131  0   3% S     1      0K      0K  <span class="built_in">fg</span> root     dhd_dpc</div><div class="line"> 6144  0   0% S   115 1682004K 115916K  <span class="built_in">fg</span> system   system_server</div><div class="line">  132  0   0% S     1      0K      0K  <span class="built_in">fg</span> root     dhd_rxf</div><div class="line"> 1731  0   0% S     6  20288K    788K  <span class="built_in">fg</span> root     /system/bin/mpdecision</div><div class="line">  217  0   0% S     6  18008K    356K  <span class="built_in">fg</span> shell    /sbin/adbd</div><div class="line"> ...</div><div class="line"> 7779  2   0% S    19 1538748K  48896K  <span class="built_in">bg</span> u0_a71   com.sohu.inputmethod.sogou:classic</div><div class="line"> 7963  0   0% S    18 1561916K  59568K  <span class="built_in">fg</span> u0_a58   org.mazhuang.boottimemeasure</div><div class="line"> ...</div></pre></td></tr></table></figure><p>各列含义：</p><table><thead><tr><th>列名</th><th>含义</th></tr></thead><tbody><tr><td>PID</td><td>进程 ID</td></tr><tr><td>PR</td><td>优先级</td></tr><tr><td>CPU%</td><td>当前瞬间占用 CPU 百分比</td></tr><tr><td>S</td><td>进程状态（R=运行，S=睡眠，T=跟踪/停止，Z=僵尸进程）</td></tr><tr><td>#THR</td><td>线程数</td></tr><tr><td>VSS</td><td>Virtual Set Size 虚拟耗用内存（包含共享库占用的内存）</td></tr><tr><td>RSS</td><td>Resident Set Size 实际使用物理内存（包含共享库占用的内存）</td></tr><tr><td>PCY</td><td>调度策略优先级，SP_BACKGROUND/SPFOREGROUND</td></tr><tr><td>UID</td><td>进程所有者的用户 ID</td></tr><tr><td>NAME</td><td>进程名</td></tr></tbody></table><p><code>top</code> 命令还支持一些命令行参数，详细用法如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Usage: top [ -m max_procs ] [ -n iterations ] [ <span class="_">-d</span> delay ] [ <span class="_">-s</span> sort_column ] [ -t ] [ -h ]</div><div class="line">    -m num  最多显示多少个进程</div><div class="line">    -n num  刷新多少次后退出</div><div class="line">    <span class="_">-d</span> num  刷新时间间隔（单位秒，默认值 5）</div><div class="line">    <span class="_">-s</span> col  按某列排序（可用 col 值：cpu, vss, rss, thr）</div><div class="line">    -t      显示线程信息</div><div class="line">    -h      显示帮助文档</div></pre></td></tr></table></figure><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><p>如下是其它常用命令的简单描述，前文已经专门讲过的命令不再额外说明：</p><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>cat</td><td>显示文件内容</td></tr><tr><td>cd</td><td>切换目录</td></tr><tr><td>chmod</td><td>改变文件的存取模式/访问权限</td></tr><tr><td>df</td><td>查看磁盘空间使用情况</td></tr><tr><td>grep</td><td>过滤输出</td></tr><tr><td>kill</td><td>杀死指定 PID 的进程</td></tr><tr><td>ls</td><td>列举目录内容</td></tr><tr><td>mount</td><td>挂载目录的查看和管理</td></tr><tr><td>mv</td><td>移动或重命名文件</td></tr><tr><td>ps</td><td>查看正在运行的进程</td></tr><tr><td>rm</td><td>删除文件</td></tr><tr><td>top</td><td>查看进程的资源占用情况</td></tr></tbody></table><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="启动-adb-server-失败"><a href="#启动-adb-server-失败" class="headerlink" title="启动 adb server 失败"></a>启动 adb server 失败</h3><p><strong>出错提示</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">error: protocol fault (couldn<span class="string">'t read status): No error</span></div></pre></td></tr></table></figure><p><strong>可能原因</strong></p><p>adb server 进程想使用的 5037 端口被占用。</p><p><strong>解决方案</strong></p><p>找到占用 5037 端口的进程，然后终止它。以 Windows 下为例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">netstat -ano | findstr LISTENING</div><div class="line"></div><div class="line">...</div><div class="line">TCP    0.0.0.0:5037           0.0.0.0:0              LISTENING       1548</div><div class="line">...</div></pre></td></tr></table></figure><p>这里 1548 即为进程 ID，用命令结束该进程：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">taskkill /PID 1548</div></pre></td></tr></table></figure><p>然后再启动 adb 就没问题了。</p><h2 id="adb-的非官方实现"><a href="#adb-的非官方实现" class="headerlink" title="adb 的非官方实现"></a>adb 的非官方实现</h2><ul><li><a href="https://github.com/facebook/fb-adb" target="_blank" rel="external">fb-adb</a> - A better shell for Android devices (for Mac).</li></ul><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>感谢朋友们无私的分享与补充。</p><ul><li><a href="https://github.com/zxning" target="_blank" rel="external">zxning</a></li><li><a href="https://github.com/linhua55" target="_blank" rel="external">linhua55</a></li><li><a href="https://github.com/codeskyblue" target="_blank" rel="external">codeskyblue</a></li><li><a href="https://github.com/seasonyuu" target="_blank" rel="external">seasonyuu</a></li><li><a href="https://github.com/fan123199" target="_blank" rel="external">fan123199</a></li></ul><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://developer.android.com/studio/command-line/adb.html" target="_blank" rel="external">Android Debug Bridge</a></li><li><a href="https://developer.android.com/studio/command-line/shell.html" target="_blank" rel="external">ADB Shell Commands</a></li><li><a href="https://developer.android.com/studio/command-line/logcat.html" target="_blank" rel="external">logcat Command-line Tool</a></li><li><a href="http://zmywly8866.github.io/2015/01/24/all-adb-command.html" target="_blank" rel="external">Android ADB命令大全</a></li><li><a href="https://github.com/ZQiang94/StudyRecords/blob/master/other/src/main/java/com/other/adb%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.md" target="_blank" rel="external">adb 命令行的使用记录</a></li><li><a href="http://www.jianshu.com/p/860bc2bf1a6a" target="_blank" rel="external">Android ADB命令大全(通过ADB命令查看wifi密码、MAC地址、设备信息、操作文件、查看文件、日志信息、卸载、启动和安装APK等)</a></li><li><a href="http://yifeiyuan.me/2016/06/30/ADB%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/" target="_blank" rel="external">那些做Android开发必须知道的ADB命令</a></li><li><a href="http://blog.csdn.net/kittyboy0001/article/details/38562515" target="_blank" rel="external">adb shell top</a></li><li><a href="http://cabins.github.io/2016/03/25/UseAdbLikeAPro-2/" target="_blank" rel="external">像高手一样使用ADB命令行（2）</a></li></ul><p>原文转载自：<a href="https://github.com/mzlogin/awesome-adb" target="_blank" rel="external">https://github.com/mzlogin/awesome-adb</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ADB，即 &lt;a href=&quot;https://developer.android.com/studio/command-line/adb.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Debug Bridge&lt;/a&gt;，它是 And
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="adb" scheme="http://yoursite.com/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>Android-优化不同版本系统WebView版本兼容性问题</title>
    <link href="http://yoursite.com/2016/08/27/TbsBridgeWebView/"/>
    <id>http://yoursite.com/2016/08/27/TbsBridgeWebView/</id>
    <published>2016-08-27T07:24:17.000Z</published>
    <updated>2016-08-27T09:43:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>项目地址：<a href="https://github.com/hjhrq1991/JsBridge" target="_blank" rel="external">传送门</a></p><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>App开发时或多或少加载web页面，但是使用h5或者一些新特性来写的web页在Android低版本系统上经常出现各种兼容适配问题。</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>WebView是Android系统提供能显示网页的系统控件，它是一个特殊的View，同时它也是一个ViewGroup可以有很多其他子View。在Android 4.4以下(不包含4.4)系统WebView底层实现是采用<a href="http://www.webkit.org" target="_blank" rel="external">WebKit内核</a>，而在Android 4.4及其以上Google 采用了<a href="http://www.chromium.org" target="_blank" rel="external">chromium内核</a>作为系统WebView的底层内核支持。在这一变化中Android 提供的WebView相关API并没有发生大变化，在4.4上也兼容低版本的API并且引进了少部分API。这里简单介绍下基于Chromium 的Webview和基于Webkit webview的差异，基于Chromium Webview提供更广的HTML5,CSS3,Javascript支持，在目前最新Android 系统版本5.0上基于chromium 37，Webview提供绝大多数的HTML5特性支持。Webkit JavaScript引起采用WebCore Javascript 在Android 4.4上换成了V8能直接提升JavaScript性能。另外Chromium 支持远程调试(Chrome DevTools)。</p><p>WebKit for WebView VS Chromium for WebView性能比对<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">                Webkit      Chromium  	        备注</div><div class="line">HTML5            278          434       http://html5test.com</div><div class="line">远程调试         不支持         支持       Android 4.4及以上支持</div><div class="line">内存占用           小           大           相差20-30M左右</div><div class="line">WebAudio        不支持        支持       Android 5.0及以上支持</div><div class="line">WebGL           不支持        支持       Android 5.0及以上支持</div><div class="line">WebRTC          不支持        支持       Android 5.0及以上支持</div></pre></td></tr></table></figure><p></p><p>因此问题在于WebView内核上，为了解决适配问题，只能使用第三方内核。</p><h3 id="内核对比"><a href="#内核对比" class="headerlink" title="内核对比"></a>内核对比</h3><p>目前开源的浏览器内核sdk不多，主要有以下几个：ChromeView、Crosswalk、TbsX5(腾讯浏览服务)。</p><p>1.基于Chromium内核的开源<a href="https://github.com/pwnall/chromeview" target="_blank" rel="external">ChromeView</a>目前基本上没有维护，另一个问题是所编译出来的动态库太大，ARM 29M，x86 38M，这无疑对app体积来说是个大难题。因此放弃采用基于Chromium的ChromeView。</p><p>2.Crosswalk同样是基于Chromium内核，同样存在上述app体积问题，因此也放弃。</p><p>3.<a href="http://x5.tencent.com" target="_blank" rel="external">TbsX5</a>基于谷歌Blink内核，并提供两种集成方案：1)只共享微信手Q空间的x5内核(for share)，2)独立下载x5内核(with download)。</p><h3 id="TbsBridgeWebView使用"><a href="#TbsBridgeWebView使用" class="headerlink" title="TbsBridgeWebView使用"></a>TbsBridgeWebView使用</h3><p>考虑App用户群的极少数没装有微信、手Q的情况，因此采用TbsX5 for share。下文基于Tbs for share来实现。</p><p>之前写过一篇<a href="http://hjhrq1991.info/2016/08/22/JsBridge" target="_blank" rel="external">Android-使用JsBridge来优化js与本地的交互</a>的文章，这次的TbsBridgeWebView同样集成了这套JsBridge，同时使用TbsX5解决web适配问题。</p><p>添加maven依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">&lt;groupId&gt;com.hjhrq1991.library.tbs&lt;/groupId&gt;</div><div class="line">&lt;artifactId&gt;tbsjsbridge&lt;/artifactId&gt;</div><div class="line">&lt;version&gt;1.0.0&lt;/version&gt;</div><div class="line">&lt;type&gt;pom&lt;/type&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure><p>添加gradle依赖</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">compile</span> <span class="string">'com.hjhrq1991.library.tbs:tbsjsbridge:1.0.0'</span></div></pre></td></tr></table></figure><p>添加权限<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;</div><div class="line">&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt;</div><div class="line">&lt;uses-permission android:name=&quot;android.permission.ACCESS_WIFI_STATE&quot; /&gt;</div><div class="line">&lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot; /&gt;</div><div class="line">&lt;uses-permission android:name=&quot;android.permission.READ_PHONE_STATE&quot; /&gt;</div><div class="line">&lt;uses-permission android:name=&quot;android.permission.READ_SETTINGS&quot; /&gt;</div><div class="line">&lt;uses-permission android:name=&quot;android.permission.WRITE_SETTINGS&quot; /&gt;</div><div class="line">&lt;uses-permission android:name=&quot;android.permission.MOUNT_UNMOUNT_FILESYSTEMS&quot; /&gt;</div><div class="line">&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;</div></pre></td></tr></table></figure><p></p><p>在你的布局上添加TbsBridgeWebView</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">com.hjhrq1991.library.tbs.TbsBridgeWebView</span></span></div><div class="line"><span class="attr">android:id</span>=<span class="string">"@+id/webView"</span></div><div class="line"><span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line"><span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> /&gt;</div></pre></td></tr></table></figure><p>JsBridge的使用请参考<a href="http://hjhrq1991.info/2016/08/22/JsBridge" target="_blank" rel="external">Android-使用JsBridge来优化js与本地的交互</a>。</p><h3 id="重要Tips"><a href="#重要Tips" class="headerlink" title="重要Tips"></a>重要Tips</h3><p>Tbs替换android.webkit相同的类<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">#系统内核                                       #SDK内核</div><div class="line">android.webkit.ConsoleMessage                 com.tencent.smtt.export.external.interfaces.ConsoleMessage</div><div class="line">android.webkit.CacheManager                   com.tencent.smtt.sdk.CacheManager(deprecated)</div><div class="line">android.webkit.CookieManager                  com.tencent.smtt.sdk.CookieManager</div><div class="line">android.webkit.CookieSyncManager              com.tencent.smtt.sdk.CookieSyncManager</div><div class="line">android.webkit.CustomViewCallback             com.tencent.smtt.export.external.interfaces.IX5WebChromeClient.CustomViewCallback</div><div class="line">android.webkit.DownloadListener               com.tencent.smtt.sdk.DownloadListener</div><div class="line">android.webkit.GeolocationPermissions         com.tencent.smtt.export.external.interfaces.GeolocationPermissionsCallback</div><div class="line">android.webkit.HttpAuthHandler                com.tencent.smtt.export.external.interfaces.HttpAuthHandler</div><div class="line">android.webkit.JsPromptResult                 com.tencent.smtt.export.external.interfaces.JsPromptResult</div><div class="line">android.webkit.JsResult                       com.tencent.smtt.export.external.interfaces.JsResult</div><div class="line">android.webkit.SslErrorHandler                com.tencent.smtt.export.external.interfaces.SslErrorHandler</div><div class="line">android.webkit.ValueCallback                  com.tencent.smtt.sdk.ValueCallback</div><div class="line">android.webkit.WebBackForwardList             com.tencent.smtt.sdk.WebBackForwardList</div><div class="line">android.webkit.WebChromeClient                com.tencent.smtt.sdk.WebChromeClient</div><div class="line">android.webkit.WebHistoryItem                 com.tencent.smtt.sdk.WebHistoryItem</div><div class="line">android.webkit.WebIconDatabase                com.tencent.smtt.sdk.WebIconDatabase</div><div class="line">android.webkit.WebResourceResponse            com.tencent.smtt.export.external.interfaces.WebResourceResponse</div><div class="line">android.webkit.WebSettings                    com.tencent.smtt.sdk.WebSettings</div><div class="line">android.webkit.WebSettings.LayoutAlgorithm    com.tencent.smtt.sdk.WebSettings.LayoutAlgorithm</div><div class="line">android.webkit.WebStorage                     com.tencent.smtt.sdk.WebStorage</div><div class="line">android.webkit.WebView                        com.tencent.smtt.sdk.WebView</div><div class="line">android.webkit.WebViewClient                  com.tencent.smtt.sdk.WebViewClient</div></pre></td></tr></table></figure><p></p><h3 id="关于Cookie"><a href="#关于Cookie" class="headerlink" title="关于Cookie"></a>关于Cookie</h3><p>com.tencent.smtt.sdk.CookieManager和com.tencent.smtt.sdk.CookieSyncManager的相关接口的调用，在接入SDK后，需要放到创建X5的WebView之后（也就是X5内核加载完成）进行；否则，cookie的相关操作只能影响系统内核。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>1.<a href="http://web.jobbole.com/84826" target="_blank" rel="external">主流浏览器内核介绍（前端开发值得了解的浏览器内核历史</a><br>2.<a href="http://blog.csdn.net/typename/article/details/40425275" target="_blank" rel="external">Android各个版本WebView</a><br>3.<a href="http://blog.csdn.net/itCatface/article/details/49799337" target="_blank" rel="external">第三方浏览器内核嵌入：Crosswalk</a><br>4.<a href="http://x5.tencent.com/doc?id=1003" target="_blank" rel="external">Tbs接入文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/hjhrq1991/JsBridge&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;heade
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="WebView" scheme="http://yoursite.com/tags/WebView/"/>
    
      <category term="Tbs" scheme="http://yoursite.com/tags/Tbs/"/>
    
      <category term="Chromium" scheme="http://yoursite.com/tags/Chromium/"/>
    
  </entry>
  
  <entry>
    <title>Hexo构建博客篇-添加访问量统计功能</title>
    <link href="http://yoursite.com/2016/08/24/Blog_Hexo_Ananlytics/"/>
    <id>http://yoursite.com/2016/08/24/Blog_Hexo_Ananlytics/</id>
    <published>2016-08-24T11:13:21.000Z</published>
    <updated>2016-08-25T02:21:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>关于Hexo的文章阅读量设置问题，大多数人都是使用不蒜子的代码实现。但是这个方法仅局限于在文章页面显示阅读数，首页是不显示的。</p><p>下面介绍如何在首页及文章页面都显示文章的阅读量，显示效果如下：</p><p style="text-align:center"><br><img border="1" src="/img/Blog_hexo/hexo_anallytics1.png"><br></p><p>网上大多数写的是NexT主题的，本文基于该主题设置方式用于gStyle主题实战后编写。<br>使用该教程时请注意比对自己所使用主题与本文的说明！</p><h3 id="配置LeanCloud"><a href="#配置LeanCloud" class="headerlink" title="配置LeanCloud"></a>配置LeanCloud</h3><p><b>注册</b></p><p>打开<a href="https://leancloud.cn" target="_blank" rel="external">LeanCloud官网</a>，进入注册页面注册。完成邮箱激活后，点击头像，进入<b>控制台</b>页面，如下：</p><p style="text-align:center"><br><img border="1" src="/img/Blog_hexo/hexo_anallytics2.png" height="258px"><br></p><p><b>创建新应用</b></p><p>创建名称为<b>Counter</b>的Class</p><p style="text-align:center"><br><img border="1" src="/img/Blog_hexo/hexo_anallytics3.png" width="60%" height="60%"><br></p><p style="text-align:center"><br><img border="1" src="/img/Blog_hexo/hexo_anallytics4.png" width="60%" height="60%"><br></p><p><b>修改配置文件</b></p><p>编辑网站根目录下的<b>_config.yml</b>文件，添加如下：<br></p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># add post views</div><div class="line">leancloud_visitors:</div><div class="line">enable: true</div><div class="line">app_id: **你的app_id**</div><div class="line">app_key: **你的app_key**</div></pre></td></tr></table></figure><p></p><p>其中，app_id和app_key在你所创建的应用的<b>设置-&gt;应用Key</b>中。</p><p><b>Web安全性</b></p><p>为了保证应用的统计计数功能仅应用于自己的博客系统，你可以在应用-&gt;设置-&gt;安全中心的Web安全域名中加入自己的博客域名，以保证数据的调用安全。</p><h3 id="修改主题文件"><a href="#修改主题文件" class="headerlink" title="修改主题文件"></a>修改主题文件</h3><p>NexT主题常用后缀为<font color="red">.swig</font>格式，小编主题常用<font colr="red">.els</font>格式，后文将以<font color="red">.后缀</font>来表示主题常用格式，实战时请替换为自己所使用主题常用后缀格式！</p><p><b>添加lean-analytics.后缀 文件</b></p><p>添加<font color="red">lean-analytics</font>文件，在所使用主题目录下的模块工具(NexT为<font color="red">/layout/_scripts</font>路径，gStyle为<font color="red">\layout\partials</font>路径)目录下，新建一个名称为<font color="red">lean-analytics.后缀<table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line">&lt;!-- custom analytics part create by xiamo --&gt;</div><div class="line">&lt;script src="https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js"&gt;&lt;/script&gt;</div><div class="line">&lt;script&gt;AV.initialize("&#123;&#123;theme.leancloud_visitors.app_id&#125;&#125;", "&#123;&#123;theme.leancloud_visitors.app_key&#125;&#125;");&lt;/script&gt;</div><div class="line">&lt;script&gt;</div><div class="line">function showTime(Counter) &#123;</div><div class="line">  var query = new AV.Query(Counter);</div><div class="line">    $(".leancloud_visitors").each(function() &#123;</div><div class="line">      var url = $(this).attr("id").trim();</div><div class="line">      query.equalTo("url", url);</div><div class="line">      query.find(&#123;</div><div class="line">        success: function(results) &#123;</div><div class="line">          if (results.length == 0) &#123;</div><div class="line">            var content = '0 ' + $(document.getElementById(url)).text();</div><div class="line">            $(document.getElementById(url)).text(content);</div><div class="line">            return;</div><div class="line">          &#125;</div><div class="line">          for (var i = 0; i &lt; results.length; i++) &#123;</div><div class="line">            var object = results[i];</div><div class="line">            var content = object.get('time') + ' ' + $(document.getElementById(url)).text();</div><div class="line">            $(document.getElementById(url)).text(content);</div><div class="line">          &#125;</div><div class="line">        &#125;,</div><div class="line">        error: function(object, error) &#123;</div><div class="line">          console.log("Error: " + error.code + " " + error.message);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">  &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">function addCount(Counter) &#123;</div><div class="line">  var Counter = AV.Object.extend("Counter");</div><div class="line">  url = $(".leancloud_visitors").attr('id').trim();</div><div class="line">  title = $(".leancloud_visitors").attr('data-flag-title').trim();</div><div class="line">  var query = new AV.Query(Counter);</div><div class="line">  query.equalTo("url", url);</div><div class="line">  query.find(&#123;</div><div class="line">    success: function(results) &#123;</div><div class="line">      if (results.length &gt; 0) &#123;</div><div class="line">        var counter = results[0];</div><div class="line">        counter.fetchWhenSave(true);</div><div class="line">        counter.increment("time");</div><div class="line">        counter.save(null, &#123;</div><div class="line">          success: function(counter) &#123;</div><div class="line">            var content =  counter.get('time') + ' ' + $(document.getElementById(url)).text();</div><div class="line">            $(document.getElementById(url)).text(content);</div><div class="line">          &#125;,</div><div class="line">          error: function(counter, error) &#123;</div><div class="line">            console.log('Failed to save Visitor num, with error message: ' + error.message);</div><div class="line">          &#125;</div><div class="line">        &#125;);</div><div class="line">      &#125; else &#123;</div><div class="line">        var newcounter = new Counter();</div><div class="line">        newcounter.set("title", title);</div><div class="line">        newcounter.set("url", url);</div><div class="line">        newcounter.set("time", 1);</div><div class="line">        newcounter.save(null, &#123;</div><div class="line">          success: function(newcounter) &#123;</div><div class="line">            console.log("newcounter.get('time')="+newcounter.get('time'));</div><div class="line">            var content = newcounter.get('time') + ' ' + $(document.getElementById(url)).text();</div><div class="line">            $(document.getElementById(url)).text(content);</div><div class="line">          &#125;,</div><div class="line">          error: function(newcounter, error) &#123;</div><div class="line">            console.log('Failed to create');</div><div class="line">          &#125;</div><div class="line">        &#125;);</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    error: function(error) &#123;</div><div class="line">      console.log('Error:' + error.code + " " + error.message);</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">&#125;</div><div class="line">$(function() &#123;</div><div class="line">  var Counter = AV.Object.extend("Counter");</div><div class="line">  if ($('.leancloud_visitors').length == 1) &#123;</div><div class="line">    addCount(Counter);</div><div class="line">  &#125; else if ($('.post-title-link').length &gt; 1) &#123;</div><div class="line">  showTime(Counter);</div><div class="line">  &#125;</div><div class="line">&#125;); </div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></font></p><p>其中，控制显示的格式的主要为content变量，按自己的需求相应修改即可。</p><p><b>添加leancloud.后缀 文件</b></p><p>在上述路径下添加<font color="red">leancloud.后缀</font>文件，并添加代码，添加的代码请按照主题常用格式编写。<br>NexT：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</div><div class="line">	&amp;nbsp; | &amp;nbsp;</div><div class="line">	&lt;span id=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;class=&quot;leancloud_visitors&quot; data-flag-title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;</div><div class="line">		&amp;nbsp;&#123;&#123;__(&apos;post.visitors&apos;)&#125;&#125;</div><div class="line">	&lt;/span&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure><p></p><p>gStyle：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;% if (theme.leancloud_visitors.enable)&#123; %&gt;</div><div class="line">	&lt;span id=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;class=&quot;leancloud_visitors&quot; data-flag-title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;</div><div class="line">		&lt;%- &#123;&#123;__(&apos;post.visitors&apos;)&#125;&#125; %&gt;</div><div class="line">	&lt;/span&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure><p></p><p><b>修改post.后缀 文件</b></p><p>NexT在<font color="red">\layout_macro</font>，我的在<font color="red">\layout</font>路径下，编辑<font color="red">post.后缀</font>文件，找到相应的插入位置插入代码：<br>gStyle：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;p style=&quot;text-align:center&quot;&gt;</div><div class="line">&lt;img border=&quot;1&quot; src=&quot;/img/Blog_hexo/hexo_anallytics6.png&quot; width=&quot;60%&quot; height=&quot;60%&quot;&gt;&lt;/img&gt;</div><div class="line">&lt;/p&gt;</div></pre></td></tr></table></figure><p></p><p>NexT：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% include &apos;_scripts/leancloud.后缀&apos; %&#125;</div></pre></td></tr></table></figure><p></p><p><b>修改layout.后缀 文件</b></p><p>在主题目录下的layout目录下，编辑<font color="red">_layout.后缀</font>文件，在body标签的上方插入代码：</p><p>NexT:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.leancloud_visitors.enable %&#125;</div><div class="line">&#123;% include &apos;_scripts/lean-analytics.swig&apos; %&#125;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure><p></p><p>gStyle：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;% if (theme.leancloud_visitors.enable)&#123; %&gt;</div><div class="line">&lt;%- partial(&apos;partials/lean-analytics&apos;) %&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure><p></p><p>修改语言配置文件</p><p>如果你的网站使用的是英语，则只需要编辑主题目录下的<font color="red">languages\语言<font>文件，增加post字段如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># post:</div><div class="line">sticky: Sticky</div><div class="line">posted: Posted on</div><div class="line">visitors: Views</div></pre></td></tr></table></figure></font></font></p><p>如果网站使用的是中文，则编辑<font color="red">languages\zh.yml</font>文件，相应的增加<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># post:</div><div class="line">sticky: Sticky</div><div class="line">posted: 发表于</div><div class="line">visitors: 阅读次数</div></pre></td></tr></table></figure><p></p><p>其他语言与之类似，将以上设置成你希望翻译的字段。</p><h3 id="增加网站的浏览次数与访客数量统计功能"><a href="#增加网站的浏览次数与访客数量统计功能" class="headerlink" title="增加网站的浏览次数与访客数量统计功能"></a>增加网站的浏览次数与访客数量统计功能</h3><p>网站的浏览次数，即pv；网站的访客数为uv。pv的计算方式是，单个用户连续点击n篇文章，记录n次访问量；uv的计算方式是，单个用户连续点击n篇文章，只记录1次访客数。你可以根据需要添加相应的统计功能。</p><p><b>安装busuanzi.js脚本</b></p><p>如果你使用的是NexT主题（其他主题类似），打开<font color="red">\layout\partial\footer.后缀</font>，拷贝下面的代码至文件的开头。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><p></p><p><b>给文章添加访问统计</b></p><p>编辑<font color="red">\layout\post.后缀</font>，在你想要的位置添加显示代码：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 阅读量 --&gt;</div><div class="line">&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;人阅读</div></pre></td></tr></table></figure><p></p><p>最终效果图如下：</p><p style="text-align:center"><br><img border="1" src="/img/Blog_hexo/hexo_anallytics1.png" height="358px"><br></p><p><b>页脚显示统计标签</b></p><p>同样编辑<font color="red">\layout\partial\footer.后缀</font></p><p>如果你想要显示pv统计量，复制以下代码至你想要放置的位置，<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</div><div class="line">     本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure><p></p><p>如果你想要显示uv统计量，复制以下代码至你想要放置的位置，<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</div><div class="line">     本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次</div><div class="line">&lt;/span&gt;</div></pre></td></tr></table></figure><p></p><p>最终效果图如下：</p><p style="text-align:center"><br><img border="1" src="/img/Blog_hexo/hexo_anallytics5.png" width="60%" height="60%"><br></p><p>你可以调整一下具体样式来适应你的主题。希望各位都能一次配置成功！</p><p>参考资料：<a href="http://www.jeyzhang.com/hexo-next-add-post-views.html" target="_blank" rel="external">http://www.jeyzhang.com/hexo-next-add-post-views.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于Hexo的文章阅读量设置问题，大多数人都是使用不蒜子的代码实现。但是这个方法仅局限于在文章页面显示阅读数，首页是不显示的。&lt;/p&gt;&lt;p&gt;下面介绍如何在首页及文章页面都显示文章的阅读量，显示效果如下：&lt;/p&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;br
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="访问量" scheme="http://yoursite.com/tags/%E8%AE%BF%E9%97%AE%E9%87%8F/"/>
    
      <category term="统计" scheme="http://yoursite.com/tags/%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Android 7.0 Nougat 的最终版发布</title>
    <link href="http://yoursite.com/2016/08/23/Nougat/"/>
    <id>http://yoursite.com/2016/08/23/Nougat/</id>
    <published>2016-08-23T02:06:32.000Z</published>
    <updated>2017-09-13T05:51:43.000Z</updated>
    
    <content type="html"><![CDATA[<p style="text-align:center"><br><img border="1" src="/img/Nougat/Nougat.png" width="60%" height="60%"><br></p><br>今天 Google 宣布推出 Android 7.0 Nougat 的最终版，Nexus 设备将第一时间获得更新。同时 7.0 源码也已提交给 Android Open Source Project (AOSP) ，这意味着整个 Android 生态系统获得了最新 Android 系统。<br><br>### 设备升级<br>接下来几周 Nexus 6, Nexus 5X, Nexus 6P, Nexus 9, Nexus Player, Pixel C, and General Mobile 4G (Android One) 将获得 Android 7.0 的 OTA 升级。在此之前已加入 Android Beta 计划正在使用 7.0 开发者预览版的设备也将获得最终版升级。<br><p style="text-align:center"><br><img border="1" src="/img/Nougat/Nougat2.png" width="60%" height="60%"><br></p><p>除了以上 Nexus 设备，LG V20 将成为第一款搭载 Android 7.0 Nougat 系统的新手机。随着新系统的正式发布，很快更多搭载新系统的手机也将陆续推出。</p><h3 id="Android-7-0-新功能回顾"><a href="#Android-7-0-新功能回顾" class="headerlink" title="Android 7.0 新功能回顾"></a>Android 7.0 新功能回顾</h3><p>Android 7.0 包含 250 多项主要特性，下面简要介绍一些功能亮点。</p><p style="text-align:center"><br><img border="1" src="/img/Nougat/Nougat3.png" width="60%" height="60%"><br></p><p><b>更多 emoji 表情：</b>系统内置 1500+ emoji 符号，包括新加入的 72 个。</p><p><b>自定义快速设置：</b>新系统允许你修改系统通知栏的快速设置功能，包括是添加删除以及位置的调整。</p><p><b>多区域支持：</b>设置多种适合自己的语言区域，系统和应用可以更好地体现这点。</p><p></p><p style="text-align:center"><br><img border="1" src="/img/Nougat/Nougat4.png" width="60%" height="60%"><br></p><p></p><p><b>多窗口支持：</b>上下或左右同时看到两个应用。</p><p><b>电池优化：</b>Doze 模式更进一步，更省电。</p><p><b>Data Saver：</b>开启 Data Saver 后，后台应用将无法使用移动网络。</p><p><b>通知分组：</b>应用的多条通知信息折叠显示。</p><p><b>快速切换应用：</b>双击应用切换按钮即可在最近两个应用之间切换。</p><p><b>Daydream：</b>系统各层高度优化的全新 VR 平台，包括手机、头戴设备和控制器，今年晚些时候揭晓。</p><p><b>Vulkan API：</b>新的 3D 高性能、跨平台图形 API 。</p><p><b>新的 JIT/AOT 编译器 ：</b>改进性能、更快安装、更少存储占用。</p><p><b>Direct Reply：</b>通知栏直接回复，而不用打开应用。</p><p><b>更多安全特性：</b>文件级别的加密、在开机解锁前即可运行的 Direct Boot 功能、借鉴 ChromeOS 的系统平滑升级。</p><p>更多 Android 7.0 特性：<a href="https://www.android.com/versions/nougat-7-0/" target="_blank" rel="external">https://www.android.com/versions/nougat-7-0/</a><br>开发者资源：<a href="https://developer.android.com/about/versions/nougat/" target="_blank" rel="external">https://developer.android.com/about/versions/nougat/</a></p><p>本文转载自：<a href="http://mp.weixin.qq.com/s?__biz=MzA5MDg3MjczMg==&mid=2652003553&idx=1&sn=2ec1d9941b74172524fdb9f6d1e8d158&scene=25&srcid=0823PcnO93w6hDp2CCExS0Hn#wechat_redirect" target="_blank" rel="external">北京GDG</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p style=&quot;text-align:center&quot;&gt;&lt;br&gt;&lt;img border=&quot;1&quot; src=&quot;/img/Nougat/Nougat.png&quot; width=&quot;60%&quot; height=&quot;60%&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;今天 Google 宣布推出 Android 7.
    
    </summary>
    
      <category term="Android资讯" scheme="http://yoursite.com/categories/Android%E8%B5%84%E8%AE%AF/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Nougat" scheme="http://yoursite.com/tags/Nougat/"/>
    
  </entry>
  
  <entry>
    <title>Android-使用JsBridge来优化js与本地的交互</title>
    <link href="http://yoursite.com/2016/08/22/JsBridge/"/>
    <id>http://yoursite.com/2016/08/22/JsBridge/</id>
    <published>2016-08-22T15:11:23.000Z</published>
    <updated>2016-08-25T02:22:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>基于<a href="https://github.com/lzyzsd/JsBridge" target="_blank" rel="external">lzyzsd的JsBridge</a> 优化改进而来的Android JsBridge。</p><p><a href="https://github.com/hjhrq1991/JsBridge" target="_blank" rel="external">工程传送门</a></p><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><p>1.支持自定义桥名；<br>2.修复web页未渲染即进行跳转导致Js桥初始化失败的问题；</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>添加maven依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">  &lt;groupId&gt;com.hjhrq1991.library&lt;/groupId&gt;</div><div class="line">  &lt;artifactId&gt;jsbridge&lt;/artifactId&gt;</div><div class="line">  &lt;version&gt;1.0.5&lt;/version&gt;</div><div class="line">  &lt;type&gt;pom&lt;/type&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure><p>添加gradle依赖</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">compile</span> <span class="string">'com.hjhrq1991.library:jsbridge:1.0.5'</span></div></pre></td></tr></table></figure><p>在你的布局上添加BridgeWebView</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">com.hjhrq1991.library.BridgeWebView</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/webView"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> /&gt;</div></pre></td></tr></table></figure><h3 id="使用默认桥名或自定义桥名"><a href="#使用默认桥名或自定义桥名" class="headerlink" title="使用默认桥名或自定义桥名"></a>使用默认桥名或自定义桥名</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//description：如需使用自定义桥名，调用以下方法即可，</span></div><div class="line"><span class="comment">// 传空或不调用setCustom方法即使用默认桥名。</span></div><div class="line"><span class="comment">// 默认桥名：WebViewJavascriptBridge</span></div><div class="line">webView.setCustom(<span class="string">"TestJavascriptBridge"</span>);</div></pre></td></tr></table></figure><h3 id="Android上使用方法"><a href="#Android上使用方法" class="headerlink" title="Android上使用方法"></a>Android上使用方法</h3><p>注册一个handler方法供Js调用<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">webView.registerHandler(<span class="string">"initSignNetPay"</span>, <span class="keyword">new</span> BridgeHandler() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handler</span><span class="params">(String data, CallBackFunction function)</span> </span>&#123;</div><div class="line">        Log.i(TAG, <span class="string">"回传结果："</span> + data);</div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, data, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p></p><p>Java里调用Js里的handler方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">webView.callHandler(<span class="string">"click1"</span>, <span class="string">"success"</span>, <span class="keyword">new</span> CallBackFunction() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCallBack</span><span class="params">(String data)</span> </span>&#123;</div><div class="line">        Log.i(TAG, <span class="string">"回传结果："</span> + data);</div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, data, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>使用默认handler方法来进行交互</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">webView.setDefaultHandler(<span class="keyword">new</span> DefaultHandler());</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.WebViewJavascriptBridge.send(</div><div class="line">    data, <span class="function"><span class="keyword">function</span>(<span class="params">responseData</span>) </span>&#123;</div><div class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"show"</span>).innerHTML = <span class="string">"repsonseData from java, data = "</span> + responseData</div><div class="line">    &#125;</div><div class="line">);</div></pre></td></tr></table></figure><h3 id="JavaScript上使用方法"><a href="#JavaScript上使用方法" class="headerlink" title="JavaScript上使用方法"></a>JavaScript上使用方法</h3><p>构建桥连接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> default_data = &#123;</div><div class="line">    error: <span class="string">"1"</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> connectMerchantJSBridge = <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.WebViewJavascriptBridge) &#123;</div><div class="line">            callback(WebViewJavascriptBridge);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="built_in">document</span>.addEventListener(<span class="string">"WebViewJavascriptBridgeReady"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                callback(WebViewJavascriptBridge);</div><div class="line">            &#125;, <span class="literal">false</span>);</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (ex) &#123; &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> cmbMerchantBridge = &#123;</div><div class="line">    initSignNet: <span class="function"><span class="keyword">function</span> (<span class="params">payData,name</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!payData) &#123;</div><div class="line">            payData = default_data;</div><div class="line">        &#125;</div><div class="line">        connectMerchantJSBridge(<span class="function"><span class="keyword">function</span> (<span class="params">bridge</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> bridge === <span class="string">"undefined"</span>) &#123;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">        bridge.callHandler(name, <span class="built_in">JSON</span>.stringify(payData));</div><div class="line">        &#125;);</div><div class="line">    &#125;,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="string">`</span></div></pre></td></tr></table></figure><p>调用Android上的handler方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">click1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> objData = <span class="keyword">new</span> datas();</div><div class="line">    <span class="keyword">var</span> payData = objData.click1;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        cmbMerchantBridge.initSignNet(payData, <span class="string">"initSignNetPay"</span>);</div><div class="line">    &#125; <span class="keyword">catch</span> (ex) &#123; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>JavaScript里注册一个handler方法供Android调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*app native调用本页面方法*/</span></div><div class="line">connectMerchantJSBridge(<span class="function"><span class="keyword">function</span>(<span class="params">bridge</span>) </span>&#123;</div><div class="line">    bridge.init(<span class="function"><span class="keyword">function</span>(<span class="params">message, responseCallback</span>) </span>&#123;</div><div class="line"></div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    bridge.registerHandler(<span class="string">"click1"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data, responseCallback</span>) </span>&#123;</div><div class="line">        responseCallback(<span class="string">"receive click1"</span>);</div><div class="line">        <span class="comment">//可以在下面执行操作</span></div><div class="line">    &#125;);</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="built_in">window</span>.cmbMerchantBridge = cmbMerchantBridge;</div></pre></td></tr></table></figure><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>This project is licensed under the terms of the MIT license.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于&lt;a href=&quot;https://github.com/lzyzsd/JsBridge&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;lzyzsd的JsBridge&lt;/a&gt; 优化改进而来的Android JsBridge。&lt;/p&gt;&lt;p&gt;&lt;a href=
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="JsBridge" scheme="http://yoursite.com/tags/JsBridge/"/>
    
  </entry>
  
  <entry>
    <title>Android开发之nuwa热修复</title>
    <link href="http://yoursite.com/2016/04/21/nuwa/"/>
    <id>http://yoursite.com/2016/04/21/nuwa/</id>
    <published>2016-04-21T07:40:35.000Z</published>
    <updated>2016-08-25T02:50:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>相信每个开发者在app版本上线后才发现有一个致命性崩溃的bug时，心中是一万只草泥马在奔跑！<br>每次发现这种bug，都只好立马上个小版本修复。这种体验着实糟糕。<br>那我们能不能动态加载一小部分代码来修复这个bug呢？<br>今天给大家带来了女娲nuwa热修复！</p><h3 id="一、什么是热修复？"><a href="#一、什么是热修复？" class="headerlink" title="一、什么是热修复？"></a>一、什么是热修复？</h3><p>热修复补丁（hotfix），又称为patch，指能够修复软件漏洞的一些代码，是一种快速、低成本修复产品软件版本缺陷的方式。<br>具体原理可以查看<a href="http://mp.weixin.qq.com/s?__biz=MzI1MTA1MzM2Nw==&mid=400118620&idx=1&sn=b4fdd5055731290eef12ad0d17f39d4a&scene=0#wechat_redirect" target="_blank" rel="external">鹅厂qq空间热修复。</a></p><h3 id="二、如何使用？"><a href="#二、如何使用？" class="headerlink" title="二、如何使用？"></a>二、如何使用？</h3><p>从QQ空间终端开发团队的文章中可以总结出要进行热更新只需要满足下面两点就可以了：<br>1.动态加载补丁dex，并将补丁dex插入到dexElements最前面<br>2.要实现热更新，需要热更新的类要防止被打上ISPREVERIFIED标记，关于这个标记，请阅读上面QQ空间团队的文章。<br>对于第一点，实现很简单，通过DexClassLoader对象，将补丁dex对象加载进来，再通过反射将补丁dex插入到dexElements最前面即可。具体可参考谷歌的Multidex的实现。</p><p>而对于第二点，关键就是如何防止类被打上ISPREVERIFIED这个标记。</p><p>简单来说，就是将所有类的构造函数中，引用另一个hack.dex中的类，这个类叫Hack.class，然后在加载补丁patch.dex前动态加载这个hack.dex，但是有一个类的构造函数中不能引用Hack.class，这个类就是Application类的子类，一旦这个类的构造函数中加入Hack.class这个类，那么程序运行时就会找不到Hack.class这个类，因为还没有被加载。也就是说，一个类直接引用到的类不在同一个dex中即可。这样，就能防止类被打上ISPREVERIFIED标记并能进行热更新。</p><p><b>添加Gradle Plugin</b><br>在工程的根build.gradle文件中添加<br></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">classpath</span> <span class="string">'cn.jiajixin.nuwa:gradle:1.2.2'</span></div></pre></td></tr></table></figure><p></p><p>然后我们的build.gradle文件可能长这样：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">buildscript &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line">        classpath &apos;com.android.tools.build:gradle:1.2.3&apos;</div><div class="line">        classpath &apos;cn.jiajixin.nuwa:gradle:1.2.2&apos;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p><b>添加Nuwa SDK</b></p><p>在app的build.gradle中添加依赖：<br></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">"cn.jiajixin.nuwa"</span></div></pre></td></tr></table></figure><p></p><p>然后我们的build.gradle文件可能长这样：<br></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</div><div class="line">    testCompile <span class="string">'junit:junit:4.12'</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:23.1.1'</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'cn.jiajixin.nuwa:nuwa:1.0.0'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>【备注】 这边有个坑，2.0版本的Android Studio为了支持Instant Run, 默认使用的Gradle Plugin是比较高的, 如果使用高版本，会报错Error:Cannot get property ‘taskDependencies’ on null object，乖乖降低到把你的Gradle Plugin版本降到较低版本，我用的是1.2.3，木有此问题</p><p><b>使用Nuwa</b></p><p>1.自定义Application,并且在Application类中添加以下方法：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">attachBaseContext</span><span class="params">(Context base)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.attachBaseContext(base);</div><div class="line">    Nuwa.init(<span class="keyword">this</span>);</div><div class="line">    Nuwa.loadPatch(<span class="keyword">this</span>,<span class="string">"/sdcard/patch.jar"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>2.运行并安装apk，会在app/build/outputs/目录下自动生成一个叫nuwa的目录：</p><p>拷贝此目录到一个指定的目录，比如：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/Users/Documents/nuwa</div></pre></td></tr></table></figure><p></p><p>此apk目前是有bug的apk, 然后我们修复bug, 修复完毕后进入步骤3</p><p>3.在Terminal工具执行如下命令：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#mac使用./gradlew或gradle，windows使用gradlew</div><div class="line">./gradlew clean nuwaDebugPatch -P NuwaDir=/Users/Documents/nuwa</div></pre></td></tr></table></figure><p></p><p>如果你使用的mac并且无法使用./gradlew，报：Permission denied错误，请执行一次该命令：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x gradlew</div></pre></td></tr></table></figure><p></p><p>然后在app/build/outputs/nuwa/debug/目录下会自动生成patch.jar文件：</p><p>此文件就是我们热部署的补丁文件</p><p>4.我们把补丁文件拷贝到sdcard根目录（这边只是为了测试整个hotfix流程， 自己的项目肯定是放在服务器上，我们通过代码自己去下载和存储）<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb push app/build/outputs/nuwa/debug/patch.jar /sdcard/</div></pre></td></tr></table></figure><p></p><p>5.重新启动app，Bug就热修复完成</p><p><b>Tips</b></p><p>如果你使用了多渠道配置，以Androidmarket为例<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">productFlavors &#123;</div><div class="line">    Androidmarket &#123;&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">productFlavors.all &#123; flavor -&gt;</div><div class="line">    flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>执行第三步的时候命令有些区别：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./gradlew clean nuwaAndroidmarketDebugPatch -P NuwaDir=/Users/Documents/nuwa</div></pre></td></tr></table></figure><p></p><p>如果打的是Release版本，使用以下代码<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./gradlew clean nuwaAndroidmarketReleasePatch -P NuwaDir=/Users/Documents/nuwa</div></pre></td></tr></table></figure><p></p><h3 id="三、有哪些坑？"><a href="#三、有哪些坑？" class="headerlink" title="三、有哪些坑？"></a>三、有哪些坑？</h3><p>1.Application类尽可能少引用其他类，以免造成该类被打伤标记无法进行热修复；<br>2.热修复无法修复xml(特别是manifest)、资源，所以如果你的布局或者manifest出错，尽量看看能否在代码里修改，不能的话那就放弃热修复还是使用常规升级修复；<br>3.使用命令生成patch.jar时，有修改的类会连同向下依赖的类一起打包进去，因此打出来包比你想象中大点，如果没有打进去，可能会造成ClassNotFoundException错误；</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;相信每个开发者在app版本上线后才发现有一个致命性崩溃的bug时，心中是一万只草泥马在奔跑！&lt;br&gt;每次发现这种bug，都只好立马上个小版本修复。这种体验着实糟糕。&lt;br&gt;那我们能不能动态加载一小部分代码来修复这个bug呢？&lt;br&gt;今天给大家带来了女娲nuwa热修复！&lt;/p
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="nuwa" scheme="http://yoursite.com/tags/nuwa/"/>
    
      <category term="热修复" scheme="http://yoursite.com/tags/%E7%83%AD%E4%BF%AE%E5%A4%8D/"/>
    
  </entry>
  
  <entry>
    <title>Android 65K问题之Multidex原理分析及NoClassDefFoundError的解决方法</title>
    <link href="http://yoursite.com/2016/03/29/65K/"/>
    <id>http://yoursite.com/2016/03/29/65K/</id>
    <published>2016-03-29T11:44:32.000Z</published>
    <updated>2016-08-25T02:21:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>Android 65K问题相信困惑了不少人，虽然AS的出来可以通过分dex快速解决65K问题，但是同时也容易因为某些代码没有打包到MainDex里引起NoClassDefFoundError。随着5.0的推出，Android也放出了<a href="http://developer.android.com/tools/building/multidex.html" target="_blank" rel="external">Multidex Support Library</a>来解决这个问题。<br><a href="http://developer.android.com/tools/building/multidex.html" target="_blank" rel="external">Multidex Support Library</a>可以直接分包处理65K问题，并且不会发生NoClassDefFoundError的情况。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>1.使用的话，首先添加依赖库：<br></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//分包multiDexEnabled必须添加该依赖</span></div><div class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:multidex:1.0.1'</span></div></pre></td></tr></table></figure><p></p><p>2.另外开启Multidex开关：<br></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">buildTypes &#123;</div><div class="line">    release &#123;</div><div class="line">        minifyEnabled <span class="keyword">false</span></div><div class="line">        <span class="comment">//分包</span></div><div class="line">        multiDexEnabled <span class="keyword">true</span></div><div class="line">        proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>3.这时候运行的话可能会报java堆内存错误，因此最好添加上：<br></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dexOptions &#123;</div><div class="line">    javaMaxHeapSize <span class="string">"4g"</span> </div><div class="line">    incremental <span class="keyword">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>4.如果你有自己的Application，则修改一下Application使其继承MultiDexApplication：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">MultiDexApplication</span> </span>&#123;</div><div class="line"></div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>如果你的Application很不幸已经继承了其他Application导致无法继承MultiDexApplication的话，那也是可以是，只需要复写该方法并加上该代码：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">attachBaseContext</span><span class="params">(Context base)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.attachBaseContext(base);</div><div class="line">    MultiDex.install(base);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>这时候你就可以跑了，具体可以看官方文档，毕竟官方文档里面写得非常清楚。</p><p>下面我们主要来说下Multidex的实现方法，以下部分来源：<a href="http://blog.waynell.com/2015/04/19/android-multidex/" target="_blank" rel="external">http://blog.waynell.com/2015/04/19/android-multidex/</a> 的分析。</p><h3 id="Multidex的实现原理"><a href="#Multidex的实现原理" class="headerlink" title="Multidex的实现原理"></a>Multidex的实现原理</h3><p>Multidex的实现原理是将class编译进不同的classes.dex文件中，一般情况下，一个APK文件中只包含了一个classes.dex文件。分包之后就存在一个主的classes.dex，多个副的classes2.dex，classes3.dex…</p><p>在要启动程序时，Android会先去加载主的classes.dex，然后在程序启动后再去加载其它副的dex。那哪些class应该被编译到主的classes.dex中呢？</p><p>先来看下Multidex的编译过程，它由三个不同的gradle task组成:<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">collect&#123;variant&#125;MultiDexComponents task</div></pre></td></tr></table></figure><p></p><p>这个task会读取项目的AndroidManifest.xml文件中注册的application、Activity、service、receiver、provider、instrumentation相关类，并将其class文件路径写到文件buidl/intermediates/multi-dex/${variant.dirName}/manifest_keep.txt中<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shrink&#123;variant&#125;MultiDexComponents task</div></pre></td></tr></table></figure><p></p><p>这个task会调用ProGuard并根据上一步生成的manifest_keep.txt文件内容去压缩class，剔除没有用到的class，生成一个精简的jar包buidl/intermediates/multi-dex/${variant.dirName}/componentClasses.jar<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">create&#123;variant&#125;MainDexClassList task</div></pre></td></tr></table></figure><p></p><p>这个task会根据上一步生成的componentClasses.jar去寻找这里面的各个class文字中依赖的class，比如一个class中有一成员变量X，那么X就是依赖的class，componentClasses.jar中所有的class和依赖的class路径都会被写入到文件buidl/intermediates/multi-dex/${variant.dirName}/maindexlist.txt中，这个文件中的类都会被编译进主的classes.dex中去。（详情可以查看ClassReferenceListBuilder的实现源码）</p><h3 id="NoClassDefFoundError"><a href="#NoClassDefFoundError" class="headerlink" title="NoClassDefFoundError"></a>NoClassDefFoundError</h3><p>Multidex固然是好的，不用再为方法数超过65536而苦恼了。但是有时往往会带来意想不到的bug，比如NoClassDefFoundError。之前我就在项目中遇到了这个问题，一启动程序就crash了，看log是由于某个类找不到引起的。</p><p>通过上面的分析，我们已经得知Multidex的原理了，所以要解决一启动程序就NoClassDefFoundError的问题只需要确定该类是否正确被编译到主classes.dex中去了，如果没有被编进去的话，只要修改下maindexlist.txt文件，把这个类添加进去即可。由于maindexlist.txt这个文件是每次编译时自动生成的，手动去修改它是没用的，所以我们可以在gradle编译中新加入一个task，在create{variant}MainDexClassList这个task完成之后再去修改maindexlist.txt文件添加丢失的class。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android 65K问题相信困惑了不少人，虽然AS的出来可以通过分dex快速解决65K问题，但是同时也容易因为某些代码没有打包到MainDex里引起NoClassDefFoundError。随着5.0的推出，Android也放出了&lt;a href=&quot;http://devel
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="65k" scheme="http://yoursite.com/tags/65k/"/>
    
      <category term="Multidex" scheme="http://yoursite.com/tags/Multidex/"/>
    
      <category term="NoClassDefFoundError" scheme="http://yoursite.com/tags/NoClassDefFoundError/"/>
    
  </entry>
  
  <entry>
    <title>Android-解决微信等混淆打包提示Can&#39;t process class</title>
    <link href="http://yoursite.com/2015/01/22/process/"/>
    <id>http://yoursite.com/2015/01/22/process/</id>
    <published>2015-01-22T15:34:46.000Z</published>
    <updated>2016-08-25T02:22:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前做项目的时候用到了微信分享和微信支付。起初微信支付没有集成到项目里，没发现什么，打包都正常。后来集成到项目里，发现坑爹了。微信只支持一个功能集成，即只能做微信支付，或者微信分享，不能同时集成两个。因为微信在sdk的处理上出现问题，每个功能有单独的sdk，而且都是实体都是继承同一个超类实现不同方法，因此sdk没法共存。<br>终于，在11月末的时候微信推出了新的集成sdk，把各个功能集成到一起了。之后项目继续在做，所以又没出现什么问题。直到最近，在打包测试时，问题终于来了。混淆打包一直不成功，提示</p><p style="text-align:center"><br><img border="1" src="/img/Process/process1.jpeg" width="60%" height="60%"><br></p><p>这个问题我在这里就不深究是什么原因，有兴趣的朋友可以加我qq：444563258一起探讨。我们继续讨论如何解决吧。<br>在网上搜索，发现有大神提供了解决思路，于是乎我也尝试自己制作。<br>大神提供的解决思路是更改proguard源码中的ClassConstants.java中ATTR_StackMap属性改为dummy，然后进行重新导出成jar，并把混淆插件所使用的jar替换成导出来的。<br>到proguard官网上下载源码，修改源码中src-&gt;proguard-&gt;classfile中得ClassConstants.java文件</p><p style="text-align:center"><br><img border="1" src="/img/Process/process2.jpeg" width="60%" height="60%"><br></p><p>把文件中第151行中得ATTR_StackMap属性StackMap修改为dummp。保存，然后就可以开始重新编译为jar做准备了</p><p style="text-align:center"><br><img border="1" src="/img/Process/process3.jpeg" width="60%" height="60%"><br></p><p>重新编译可以使用多种方式，我这里使用ant进行重新编译，具体我就不多说，可以参考这篇blog，里面有ant的配置和使用<a href="http://glblong.blog.51cto.com/3058613/1536516。" target="_blank" rel="external">http://glblong.blog.51cto.com/3058613/1536516。</a><br>重新编译完后，我们就可以使用了。如果你使用的是eclipse，代码混淆使用的是sdk里的jar。大家可以替换sdk下的tools的groguard.jar(大伙别介意，我用的是mac，所以就没有列表具体路径，只是做个截图供大家参考)</p><p style="text-align:center"><br><img border="1" src="/img/Process/process4.jpeg" width="60%" height="60%"><br></p><p>如果你使用的是android studio，studio的话，默认会使用它自带的proguard插件，所以替换sdk的jar是无效的，依然会提示这个错误，所以你有两种选择：1.更改你的studio里proguard插件的路径(这个我也不知道哪里改，如果你知道的话请告诉我一声)；2.替换你的studio里的proguard.jar(路径如下图)</p><p style="text-align:center"><br><img border="1" src="/img/Process/process5.jpeg" width="60%" height="60%"><br></p><p>替换之后重启你的studio，然后重新打包你的项目，你就会很惊喜的看到，终于编译成功了！</p><p style="text-align:center"><br><img border="1" src="/img/Process/process6.jpeg" width="60%" height="60%"><br></p><p>文后附上我重新编译的proguard下载地址：<a href="http://download.csdn.net/detail/hjhrq1991/8388025" target="_blank" rel="external">点击下载</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前做项目的时候用到了微信分享和微信支付。起初微信支付没有集成到项目里，没发现什么，打包都正常。后来集成到项目里，发现坑爹了。微信只支持一个功能集成，即只能做微信支付，或者微信分享，不能同时集成两个。因为微信在sdk的处理上出现问题，每个功能有单独的sdk，而且都是实体都是
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="微信" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="混淆" scheme="http://yoursite.com/tags/%E6%B7%B7%E6%B7%86/"/>
    
      <category term="报错" scheme="http://yoursite.com/tags/%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>Android-mac下如何使用adb命令</title>
    <link href="http://yoursite.com/2014/12/25/ADB/"/>
    <id>http://yoursite.com/2014/12/25/ADB/</id>
    <published>2014-12-25T14:34:15.000Z</published>
    <updated>2016-09-14T06:25:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>相信在使用mac os X的网友都知道，mac没几个像win上豌豆荚、360助手之类的工具，在mac下做android开发就比较麻烦了，遇到adb中断，或者打包apk，没有工具很难重启adb或者把apk安装到手机上。这时候我们就需要使用adb命令了。<br>可是有些有网友又说，adb用不了，提示：commadb not found</p><p style="text-align:center"><br><img border="1" src="/img/ADB/ADB1.png" width="60%" height="60%"><br></p><p>其实这很简单，这是因为你没有配置adb的环境变量。不信？大家想想win上配置安卓的环境时是否添加了两个path，一个是sdk的tools文件夹，另一个是platform-tools文件夹。想起来就对了，mac下也需要配置</p><p><b>1.首先打开你的终端</b></p><p></p><p style="text-align:center"><br><img border="1" src="/img/ADB/ADB2.png" width="80px"><br></p><br><b>2.然后输入以下代码：</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#进去HOME目录：</div><div class="line">echo $HOME</div><div class="line"></div><div class="line">#创建文件：</div><div class="line">touch .bash_profile</div><div class="line"></div><div class="line">#打开文件：</div><div class="line">open -e .bash_profile</div></pre></td></tr></table></figure><p></p><p><b>3.这时就会打开你的.bash_profile文件，在文件中输入你的sdk路径：</b><br>export PATH=${PATH}:/Users/hjhrq1991/Downloads/adt-bundle-mac-x86_64-20140702/sdk/platform-tools:/Users/hjhrq1991/Downloads/adt-bundle-mac-x86_64-20140702/sdk/tools</p><p></p><p style="text-align:center"><br><img border="1" src="/img/ADB/ADB3.jpeg" width="60%" height="60%"><br></p><br><b>4.输入完后保存并关闭你的文件(关闭即自动保存)</b><p></p><p><b>5.然后接着在你的终端上输入以下命令：</b><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#刷新环境变量</div><div class="line">source .bash_profile</div></pre></td></tr></table></figure><p></p><p></p><p style="text-align:center"><br><img border="1" src="/img/ADB/ADB4.jpeg" width="60%" height="60%"><br></p><br>然后你就可以使用adb命令来测试了，如果还不行，请检测你保存的sdk路径是否正确！<p></p><p>具体ADB命令请看<a href="http://hjhrq1991.info/2016/09/14/ADBUsage" target="_blank" rel="external">ADB命令全集</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;相信在使用mac os X的网友都知道，mac没几个像win上豌豆荚、360助手之类的工具，在mac下做android开发就比较麻烦了，遇到adb中断，或者打包apk，没有工具很难重启adb或者把apk安装到手机上。这时候我们就需要使用adb命令了。&lt;br&gt;可是有些有网友又
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="adb" scheme="http://yoursite.com/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>Android5.0之RecyclerView</title>
    <link href="http://yoursite.com/2014/10/25/recyclerview/"/>
    <id>http://yoursite.com/2014/10/25/recyclerview/</id>
    <published>2014-10-25T03:06:35.000Z</published>
    <updated>2016-08-25T02:50:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>在上一篇Blog中已经讲到过了RecyclerVIew的特性等等，现在我们开始正式讲讲这个它吧。<br>RecyclerView作为listview的更新版面世，有着他得天独厚的优势：<br>第一点，就是他更完善Recycler机制，比listview的recycler机制还相对完善，可以指定recycler缓冲池中循环利用的view的数量；<br>第二点，recyclerview不再有由自己来管理子布局view了，全部交给layoutmanger管理；<br>第三点，完美解决了循环和滚动的问题，而且支持横向布局；<br>第四点，支持item动画，猿们终于不用自己写很多代码去对item设置动画，懒点可以使用默认动画，想炫点可以自己自定义动画并通过setItemAnimator()方法设置……<br>好了，不多说，优势还有很多，就让猿们自己慢慢挖掘吧。</p><p>recyclerview是21新增的widget，想使用的话，需要使用以下最新的support-v7-21包，以及recyclerview的单独支持包。这两个包都可以在最新的SDK中提取出来，使用jar包或者工程都可以。</p><p style="text-align:center"><br><img border="1" src="/img/RecyclerView/RecyclerView1.png" width="60%" height="60%"><br></p><p>导入包后我们就可以开始使用recyclerview了，在布局文件中使用方法如下。Eclipse中是无法找到的，只能自己手动把android.support.v7.widget.RecyclerView打出来，在AS上可以直接找到。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;android.support.v7.widget.RecyclerView</div><div class="line">    android:id=&quot;@+id/rvlist&quot;</div><div class="line">    android:layout_below=&quot;@+id/title_bar&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:scrollbars=&quot;none&quot; /&gt;</div></pre></td></tr></table></figure><p></p><p>布局有了，item的布局我就不说，下面跟随我的步伐看看代码里怎么使用<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">private void showDate() &#123;</div><div class="line">    // 创建一个线性布局管理器</div><div class="line">    LinearLayoutManager layoutManager = new LinearLayoutManager(this);</div><div class="line">    // 设置垂直布局，目前仅支持LinearLayout(有垂直和横向)</div><div class="line">    layoutManager.setOrientation(LinearLayoutManager.VERTICAL);</div><div class="line">    // 设置缓冲池最大循环使用view数</div><div class="line">    mRecylerView.getRecycledViewPool().setMaxRecycledViews(0, 10);</div><div class="line">    // 设置布局管理器</div><div class="line">    mRecylerView.setLayoutManager(layoutManager);</div><div class="line">    // 创建Adapter，并指定数据集</div><div class="line">    mAdapter = new TestAdaper(this, mList);</div><div class="line">    // 设置Adapter</div><div class="line">    mRecylerView.setAdapter(mAdapter);</div><div class="line">    // 设置默认动画</div><div class="line">    mRecylerView.setItemAnimator(new DefaultItemAnimator());</div><div class="line">    // 还有下面这上三种动画FlipDownItemAnimator, SlideItemAnimator, FromTopItemAnimator</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>Adapter的变化更是大，recyclerview的adapter使用viewholder，使用时必须继承RecyclerView.Adapter；在listview中，我们使用getview()来获取item的布局，在这里我们必须使用onCreateViewHolder(ViewGroup parent, int viewtype)来获取布局，其中第二个参数viewtype怎么来的？其实是我们传进来的，如果我们需要使用多布局，则必须复写getItemViewType方法，这个方法没有强制必须复写，但是多布局时必须复写，这是个int返回值得方法，我们将你的布局类型传进去，这样我们就可以得到viewtype。另外，viewholder的使用必须继承RecyclerView.ViewHolder。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div></pre></td><td class="code"><pre><div class="line">package com.hjhrq1991.adapter;</div><div class="line"></div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">import com.hjhrq1991.bean.TestInfo;</div><div class="line">import com.hjhrq1991.recyclerviewdemo.R;</div><div class="line"></div><div class="line">import android.content.Context;</div><div class="line">import android.support.v7.widget.RecyclerView;</div><div class="line">import android.support.v7.widget.RecyclerView.ViewHolder;</div><div class="line">import android.view.LayoutInflater;</div><div class="line">import android.view.View;</div><div class="line">import android.view.ViewGroup;</div><div class="line">import android.widget.CheckBox;</div><div class="line">import android.widget.ImageView;</div><div class="line">import android.widget.TextView;</div><div class="line">import android.widget.Toast;</div><div class="line"></div><div class="line">public class TestAdaper extends RecyclerView.Adapter&lt;ViewHolder&gt; &#123;</div><div class="line">    private List&lt;TestInfo&gt; mList;</div><div class="line">    private Context context;</div><div class="line"></div><div class="line">    public TestAdaper(Context context, List&lt;TestInfo&gt; mList) &#123;</div><div class="line">        super();</div><div class="line">        this.context = context;</div><div class="line">        this.mList = mList;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 内部TextHoler</div><div class="line">     */</div><div class="line">    public class TextHoler extends RecyclerView.ViewHolder &#123;</div><div class="line">        public TextView textView;</div><div class="line"></div><div class="line">        public TextHoler(View view) &#123;</div><div class="line">            super(view);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * iamgeHolder</div><div class="line">     */</div><div class="line">    public class ImageHoler extends RecyclerView.ViewHolder &#123;</div><div class="line">        public TextView textView;</div><div class="line">        public ImageView Imageview;</div><div class="line"></div><div class="line">        public ImageHoler(View view) &#123;</div><div class="line">            super(view);</div><div class="line">            this.textView = (TextView) view.findViewById(R.id.text);</div><div class="line">            this.Imageview = (ImageView) view.findViewById(R.id.image);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 按钮的holder</div><div class="line">     */</div><div class="line">    public class CbHoler extends RecyclerView.ViewHolder &#123;</div><div class="line">        public TextView textView;</div><div class="line">        public ImageView Imageview;</div><div class="line">        public CheckBox checkbox;</div><div class="line"></div><div class="line">        public CbHoler(View view) &#123;</div><div class="line">            super(view);</div><div class="line">            this.textView = (TextView) view.findViewById(R.id.text);</div><div class="line">            this.Imageview = (ImageView) view.findViewById(R.id.image);</div><div class="line">            this.checkbox = (CheckBox) view.findViewById(R.id.checkbox);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int getItemCount() &#123;</div><div class="line">        // TODO Auto-generated method stub</div><div class="line">        return mList.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获取item的类型</div><div class="line">     */</div><div class="line">    @Override</div><div class="line">    public int getItemViewType(int position) &#123;</div><div class="line">        // TODO Auto-generated method stub</div><div class="line">        return mList.get(position).getType();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 创建view</div><div class="line">     */</div><div class="line">    @Override</div><div class="line">    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewtype) &#123;</div><div class="line">        // TODO Auto-generated method stub</div><div class="line">        View v = null;</div><div class="line">        ViewHolder holer = null;</div><div class="line">        switch (viewtype) &#123;</div><div class="line">            case TestInfo.TASK_TEXT:</div><div class="line">                v = LayoutInflater.from(parent.getContext()).inflate(</div><div class="line">                    R.layout.item_text_layout, null);</div><div class="line">                holer = new TextHoler(v);</div><div class="line">                break;</div><div class="line">            case TestInfo.TASK_DRAWABLE:</div><div class="line">                v = LayoutInflater.from(parent.getContext()).inflate(</div><div class="line">                    R.layout.item_image_layout, null);</div><div class="line">                holer = new ImageHoler(v);</div><div class="line">                break;</div><div class="line">            case TestInfo.TASK_CHEXKBOX:</div><div class="line">                v = LayoutInflater.from(parent.getContext()).inflate(</div><div class="line">                    R.layout.item_checkbox_layout, null);</div><div class="line">                holer = new CbHoler(v);</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        return holer;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 在这里进行数据的绑定，参数1是onCreateViewHolder创建的viewholder，参数2是你item的位置</div><div class="line">     */</div><div class="line">    @Override</div><div class="line">    public void onBindViewHolder(ViewHolder holder, int position) &#123;</div><div class="line">        // TODO Auto-generated method stub</div><div class="line">        switch (getItemViewType(position)) &#123;</div><div class="line">            case TestInfo.TASK_TEXT:</div><div class="line">                TextHoler textholer = (TextHoler) holder;</div><div class="line">                textholer.textView.setText(mList.get(position).getContent());</div><div class="line">                break;</div><div class="line">            case TestInfo.TASK_DRAWABLE:</div><div class="line">                ImageHoler imageHolder = (ImageHoler) holder;</div><div class="line">                imageHolder.textView.setText(mList.get(position).getContent());</div><div class="line">                imageHolder.Imageview.setImageResource(mList.get(position)</div><div class="line">                    .getDrawableurl());</div><div class="line">                break;</div><div class="line">            case TestInfo.TASK_CHEXKBOX:</div><div class="line">                CbHoler cbHoler = (CbHoler) holder;</div><div class="line">                cbHoler.textView.setText(mList.get(position).getContent());</div><div class="line">                cbHoler.Imageview.setImageResource(mList.get(position)</div><div class="line">                    .getDrawableurl());</div><div class="line">                cbHoler.checkbox.setText(mList.get(position).getCbcontent());</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>看了这么多代码，估计猿们纷纷表示，click方法呢？怎么没见到onitemclick方法？是的，listview里有onItemClick方法，但是这样容易造成item和item内部控件的点击事件冲突，为了解决这个问题，recyclerview不再提供onitemclick方法。惊恐纳尼，不提供，那怎么破？别担心，onitemclick方法可以在adapter中实现。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * item点击事件的实现</div><div class="line"> */</div><div class="line">class OnItemClick implements View.OnClickListener &#123;</div><div class="line"></div><div class="line">    public OnItemClick() &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onClick(View v) &#123;</div><div class="line">        Toast.makeText(context, &quot;你点击了item&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line"> * item内部控件点击事件的实现</div><div class="line"> */</div><div class="line">class OnClick implements View.OnClickListener &#123;</div><div class="line">    private int position;</div><div class="line"></div><div class="line">    public OnClick(int position) &#123;</div><div class="line">        this.position = position;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onClick(View v) &#123;</div><div class="line">        Toast.makeText(context, &quot;你点击了第&quot; + position + &quot;个text&quot;,</div><div class="line">            Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>onItemClick方法在ViewHolder里使用<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">public class TextHoler extends RecyclerView.ViewHolder &#123;</div><div class="line">    public TextView textView;</div><div class="line"></div><div class="line">    public TextHoler(View view) &#123;</div><div class="line">        super(view);</div><div class="line">        this.textView = (TextView) view.findViewById(R.id.text);</div><div class="line">        view.setOnClickListener(new OnItemClick());// 这里使用onItemClick方法</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>至于item内部控件的点击事件在onBindViewHolder方法里实现。<br>除了这种方法可以实现onItemClick事件外，还有其他方法，例如在复写recyclerview源码，扩展他的点击事件方法。我自己还有另一种方法，在adapter里写一个接口，在activity里实现接口并监听接口，这种方法就在我下一篇blog使用recyclerview实现Gallery画廊效果里说吧。</p><p style="text-align:center"><br><img border="1" src="/img/RecyclerView/RecyclerView2.jpeg" width="60%" height="60%"><br></p><p><a href="http://download.csdn.net/detail/hjhrq1991/8093009" target="_blank" rel="external">demo下载</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在上一篇Blog中已经讲到过了RecyclerVIew的特性等等，现在我们开始正式讲讲这个它吧。&lt;br&gt;RecyclerView作为listview的更新版面世，有着他得天独厚的优势：&lt;br&gt;第一点，就是他更完善Recycler机制，比listview的recycler机制
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="RecyclerView" scheme="http://yoursite.com/tags/RecyclerView/"/>
    
  </entry>
  
</feed>
